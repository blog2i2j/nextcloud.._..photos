{"version":3,"file":"albums-CeDjJMgY.chunk.mjs","sources":["../src/store/albums.ts","../src/store/publicAlbums.ts","../src/store/sharedAlbums.ts","../src/services/AlbumContent.ts","../src/components/Albums/CollaboratorsSelectionForm.vue","../src/components/Albums/AlbumForm.vue","../src/views/Albums.vue","../src/views/AlbumContent.vue","../src/views/SharedAlbums.vue","../src/views/SharedAlbumContent.vue","../src/views/PublicAlbumContent.vue","../src/components/Albums/AlbumPicker.vue"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getCurrentUser } from '@nextcloud/auth'\nimport type { ShareType } from '@nextcloud/sharing'\n\nimport type { Collection } from '../services/collectionFetcher'\nimport type { PhotoNode } from '../utils/fileUtils'\n\nexport type Collaborator = {\n\tid: string // - The id of the collaborator.\n\tlabel: string // - The label of the collaborator for display.\n\ttype: ShareType.User|ShareType.Group|ShareType.Link // - The type of the collaborator.\n}\n\nexport type Album = Collection & {\n\tlocation: string // - The user set location of the album.\n\tcollaborators: Collaborator[] // - The list of collaborators.\n}\n\nconst albumsPrefix = `/photos/${getCurrentUser()?.uid}/albums/`\n\nconst getters = {\n\talbums: (_, __, ___, rootGetters): Album[] => rootGetters.collectionsWithPrefix(albumsPrefix),\n\tgetAlbum: (_, __, rootState) => (albumName): Album => rootState.collections.collections[`${albumsPrefix}${albumName}`],\n\tgetAlbumFiles: (_, __, rootState) => (albumName): PhotoNode[] => rootState.collections.collectionsFiles[`${albumsPrefix}${albumName}`] || [],\n\tgetAlbumName: (_, __, ___) => albumName => `${albumsPrefix}${albumName}`,\n}\nexport default { getters }\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { Collection } from \"../services/collectionFetcher\"\n\nexport type PublicAlbum = Collection & {\n\toriginalName: string // The original name of the album.\n\tlocation: string // The user set location of the album.\n}\n\nconst publicAlbumsPrefix = '/photospublic/'\n\nconst getters = {\n\tpublicAlbums: (_, __, ___, rootGetters): PublicAlbum[] => rootGetters.collectionsWithPrefix(publicAlbumsPrefix),\n\tgetPublicAlbum: (_, __, rootState) => (publicAlbumName): PublicAlbum => rootState.collections.collections[`${publicAlbumsPrefix}${publicAlbumName}`] || null,\n\tgetPublicAlbumFiles: (_, __, rootState) => publicAlbumName => rootState.collections.collectionsFiles[`${publicAlbumsPrefix}${publicAlbumName}`] || [],\n\tgetPublicAlbumName: (_, __, ___) => publicAlbumName => `${publicAlbumsPrefix}${publicAlbumName}`,\n}\nexport default { getters }\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getCurrentUser } from '@nextcloud/auth'\nimport type { Album } from './albums'\nimport type { PhotoNode } from '../utils/fileUtils'\n\nconst sharedAlbumsPrefix = `/photos/${getCurrentUser()?.uid}/sharedalbums/`\n\nconst getters = {\n\tsharedAlbums: (_, __, ___, rootGetters): Album[] => rootGetters.collectionsWithPrefix(sharedAlbumsPrefix),\n\tgetSharedAlbum: (_, __, rootState) => (sharedAlbumName): Album => rootState.collections.collections[`${sharedAlbumsPrefix}${sharedAlbumName}`],\n\tgetSharedAlbumFiles: (_, __, rootState) => (sharedAlbumName): PhotoNode[] => rootState.collections.collectionsFiles[`${sharedAlbumsPrefix}${sharedAlbumName}`] || [],\n\tgetSharedAlbumName: (_, __, ___) => sharedAlbumName => `${sharedAlbumsPrefix}${sharedAlbumName}`,\n}\nexport default { getters }\n","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport axios, { type AxiosRequestConfig } from '@nextcloud/axios'\nimport { generateUrl } from '@nextcloud/router'\nimport { genFileInfo, encodeFilePath, type PhotoNode } from '../utils/fileUtils.js'\nimport allowedMimes from './AllowedMimes.js'\nimport { getCurrentUser } from '@nextcloud/auth'\n\n/**\n * List files from a folder and filter out unwanted mimes\n */\nexport default async function(path: string = '/', options: AxiosRequestConfig & { shared?: 'shared' | 'album' } = {}) {\n\tconst endpoint = generateUrl(`/apps/photos/api/v1/${options.shared ? 'shared' : 'albums'}`)\n\tconst prefix = `/files/${getCurrentUser()?.uid}`\n\n\t// fetch listing\n\tconst response = await axios.get(endpoint + encodeFilePath(path), options)\n\tconst list: PhotoNode[] = response.data\n\t\t.map(data => ({ ...data, filename: `${prefix}${data.filename}` }))\n\t\t.map(data => genFileInfo(data))\n\n\t// filter all the files and folders\n\tlet folder: PhotoNode|undefined\n\tconst folders: PhotoNode[] = []\n\tconst files: PhotoNode[] = []\n\n\tfor (const entry of list) {\n\t\t// is this the current provided path ?\n\t\tif (entry.filename === `${prefix}${path}`) {\n\t\t\tfolder = entry\n\t\t} else if (entry.type !== 'file') {\n\t\t\tfolders.push(entry)\n\t\t} else if (allowedMimes.indexOf(entry.mime) > -1) {\n\t\t\tfiles.push(entry)\n\t\t}\n\t}\n\n\t// return current folder, subfolders and files\n\treturn { folder, folders, files }\n}\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<div class=\"manage-collaborators\">\n\t\t<h2 class=\"manage-collaborators__title\">\n\t\t\t{{ t('photos', 'Add collaborators') }}\n\t\t</h2>\n\n\t\t<form class=\"manage-collaborators__form\" @submit.prevent>\n\t\t\t<NcSelect v-model=\"searchText\"\n\t\t\t\tinput-id=\"sharing-search-input\"\n\t\t\t\t:input-label=\"t('photos', 'Add people or groups who can edit your album')\"\n\t\t\t\t:loading=\"loadingCollaborators\"\n\t\t\t\tlabel=\"label\"\n\t\t\t\t:filterable=\"false\"\n\t\t\t\t:placeholder=\"t('photos', 'Search people or groups')\"\n\t\t\t\t:clear-search-on-blur=\"() => false\"\n\t\t\t\t:user-select=\"true\"\n\t\t\t\t:append-to-body=\"false\"\n\t\t\t\t:options=\"searchResults\"\n\t\t\t\t@search=\"searchCollaborators\"\n\t\t\t\t@option:selected=\"({key}) => selectEntity(key)\">\n\t\t\t\t{{ t('photos', 'No recommendations. Start typing.') }}\n\t\t\t</NcSelect>\n\t\t</form>\n\n\t\t<ul class=\"manage-collaborators__selection\">\n\t\t\t<li v-for=\"collaboratorKey of listableSelectedCollaboratorsKeys\"\n\t\t\t\t:key=\"collaboratorKey\"\n\t\t\t\tclass=\"manage-collaborators__selection__item\">\n\t\t\t\t<NcListItemIcon :id=\"availableCollaborators[collaboratorKey].id\"\n\t\t\t\t\t:display-name=\"availableCollaborators[collaboratorKey].label\"\n\t\t\t\t\t:name=\"availableCollaborators[collaboratorKey].label\"\n\t\t\t\t\t:user=\"availableCollaborators[collaboratorKey].id\"\n\t\t\t\t\t:is-no-user=\"availableCollaborators[collaboratorKey].type !== collaboratorTypes.User\">\n\t\t\t\t\t<AccountGroup v-if=\"availableCollaborators[collaboratorKey].type === collaboratorTypes.Group\" :title=\"t('photos', 'Group')\" />\n\t\t\t\t\t<NcButton type=\"tertiary\"\n\t\t\t\t\t\t:aria-label=\"t('photos', 'Remove {collaboratorLabel} from the collaborators list', {collaboratorLabel: availableCollaborators[collaboratorKey].label})\"\n\t\t\t\t\t\t@click=\"unselectEntity(collaboratorKey)\">\n\t\t\t\t\t\t<Close slot=\"icon\" :size=\"20\" />\n\t\t\t\t\t</NcButton>\n\t\t\t\t</NcListItemIcon>\n\t\t\t</li>\n\t\t</ul>\n\n\t\t<div class=\"actions\">\n\t\t\t<div v-if=\"allowPublicLink\" class=\"actions__public-link\">\n\t\t\t\t<template v-if=\"isPublicLinkSelected && publicLink.id !== ''\">\n\t\t\t\t\t<NcButton class=\"manage-collaborators__public-link-button\"\n\t\t\t\t\t\t:aria-label=\"t('photos', 'Copy the public link')\"\n\t\t\t\t\t\t:title=\"publicLinkURL\"\n\t\t\t\t\t\t@click=\"copyPublicLink\">\n\t\t\t\t\t\t<template v-if=\"publicLinkCopied\">\n\t\t\t\t\t\t\t{{ t('photos', 'Public link copied!') }}\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t\t{{ t('photos', 'Copy public link') }}\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<Check v-if=\"publicLinkCopied\" />\n\t\t\t\t\t\t\t<ContentCopy v-else />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</NcButton>\n\t\t\t\t\t<NcButton type=\"tertiary\"\n\t\t\t\t\t\t:aria-label=\"t('photos', 'Delete the public link')\"\n\t\t\t\t\t\t@click=\"deletePublicLink\">\n\t\t\t\t\t\t<Close slot=\"icon\" />\n\t\t\t\t\t</NcButton>\n\t\t\t\t</template>\n\t\t\t\t<NcButton v-else\n\t\t\t\t\t:disabled=\"isPublicLinkSelected && publicLink.id === ''\"\n\t\t\t\t\t:aria-label=\"t('photos', 'Create public link share')\"\n\t\t\t\t\tclass=\"manage-collaborators__public-link-button\"\n\t\t\t\t\t@click=\"createPublicLinkForAlbum\">\n\t\t\t\t\t<Earth slot=\"icon\" />\n\t\t\t\t\t{{ t('photos', 'Share via public link') }}\n\t\t\t\t</NcButton>\n\t\t\t</div>\n\n\t\t\t<div class=\"actions__slot\">\n\t\t\t\t<slot :collaborators=\"selectedCollaborators\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script lang='ts'>\nimport { mapActions } from 'vuex'\n\nimport Close from 'vue-material-design-icons/Close.vue'\nimport Check from 'vue-material-design-icons/Check.vue'\nimport ContentCopy from 'vue-material-design-icons/ContentCopy.vue'\nimport AccountGroup from 'vue-material-design-icons/AccountGroup.vue'\nimport Earth from 'vue-material-design-icons/Earth.vue'\nimport AccountGroupSvg from '@mdi/svg/svg/account-group.svg'\n\nimport axios from '@nextcloud/axios'\nimport { showError } from '@nextcloud/dialogs'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { generateOcsUrl, generateUrl } from '@nextcloud/router'\nimport { NcButton, NcListItemIcon, NcSelect } from '@nextcloud/vue'\nimport { ShareType } from '@nextcloud/sharing'\nimport { translate } from '@nextcloud/l10n'\n\nimport logger from '../../services/logger.js'\nimport FetchCollectionContentMixin from '../../mixins/FetchCollectionContentMixin.js'\nimport type { Collaborator } from '../../store/albums.js'\nimport type { PropType } from 'vue'\n\ntype CollaboratorSearchResult = Collaborator & {\n\tkey: string\n\tdisplayName: string // The label of the collaborator for display.\n\ticonSvg?: Element // An icon to differentiate the collaborator type.\n}\n\nexport default {\n\tname: 'CollaboratorsSelectionForm',\n\n\tcomponents: {\n\t\tClose,\n\t\tAccountGroup,\n\t\tContentCopy,\n\t\tCheck,\n\t\tEarth,\n\t\tNcButton,\n\t\tNcListItemIcon,\n\t\tNcSelect,\n\t},\n\n\tmixins: [FetchCollectionContentMixin],\n\n\tprops: {\n\t\talbumName: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\n\t\tcollaborators: {\n\t\t\ttype: Array as PropType<Collaborator[]>,\n\t\t\tdefault: () => [],\n\t\t},\n\n\t\tallowPublicLink: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tsearchText: null,\n\t\t\tavailableCollaborators: {} as Record<string, Collaborator>,\n\t\t\tselectedCollaboratorsKeys: [] as string[],\n\t\t\tcurrentSearchResults: [] as Collaborator[],\n\t\t\tloadingCollaborators: false,\n\t\t\trandomId: Math.random().toString().substring(2, 10),\n\t\t\tpublicLinkCopied: false,\n\t\t\tcollaboratorTypes: ShareType,\n\t\t\tconfig: {\n\t\t\t\tminSearchStringLength: parseInt(OC.config['sharing.minSearchStringLength'], 10) || 0,\n\t\t\t},\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tsearchResults(): CollaboratorSearchResult[] {\n\t\t\treturn this.currentSearchResults\n\t\t\t\t.filter(({ id }) => id !== getCurrentUser()?.uid)\n\t\t\t\t.map((collaborator) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...collaborator,\n\t\t\t\t\t\tkey: `${collaborator.type}:${collaborator.id}`,\n\t\t\t\t\t\ticonSvg: collaborator.type === ShareType.Group ? AccountGroupSvg : undefined,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.filter(({ key }) => !this.selectedCollaboratorsKeys.includes(key))\n\t\t},\n\n\t\tlistableSelectedCollaboratorsKeys(): string[] {\n\t\t\treturn this.selectedCollaboratorsKeys\n\t\t\t\t.filter(collaboratorKey => this.availableCollaborators[collaboratorKey].type !== ShareType.Link)\n\t\t},\n\n\t\tselectedCollaborators(): Collaborator[] {\n\t\t\treturn this.selectedCollaboratorsKeys\n\t\t\t\t.map((collaboratorKey) => this.availableCollaborators[collaboratorKey])\n\t\t},\n\n\t\tisPublicLinkSelected(): boolean {\n\t\t\treturn this.selectedCollaboratorsKeys.includes(`${ShareType.Link}`)\n\t\t},\n\n\t\tpublicLink(): Collaborator {\n\t\t\treturn this.availableCollaborators[ShareType.Link]\n\t\t},\n\n\t\tpublicLinkURL(): string {\n\t\t\treturn `${window.location.protocol}//${window.location.host}${generateUrl(`apps/photos/public/${this.publicLink.id}`)}`\n\t\t},\n\n\t\talbumFileName(): string {\n\t\t\treturn this.$store.getters.getAlbumName(this.albumName)\n\t\t},\n\t},\n\n\twatch: {\n\t\tcollaborators(collaborators) {\n\t\t\tthis.populateCollaborators(collaborators)\n\t\t},\n\t},\n\n\tmounted() {\n\t\tthis.populateCollaborators(this.collaborators)\n\t},\n\n\tmethods: {\n\t\t...mapActions(['updateCollection']),\n\n\t\t/**\n\t\t * Fetch possible collaborators.\n\t\t */\n\t\tasync searchCollaborators(query: string) {\n\t\t\tif (query === undefined) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tquery = query.trim()\n\n\t\t\tif (query.length < this.config.minSearchStringLength) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.loadingCollaborators = true\n\t\t\t\tconst response = await axios.get(generateOcsUrl('core/autocomplete/get'), {\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tsearch: query,\n\t\t\t\t\t\titemType: 'share-recipients',\n\t\t\t\t\t\tshareTypes: [\n\t\t\t\t\t\t\tShareType.User,\n\t\t\t\t\t\t\tShareType.Group,\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tthis.currentSearchResults = response.data.ocs.data\n\t\t\t\t\t.map(collaborator => {\n\t\t\t\t\t\tswitch (collaborator.source) {\n\t\t\t\t\t\tcase 'users':\n\t\t\t\t\t\t\treturn { id: collaborator.id, label: collaborator.label, type: ShareType.User }\n\t\t\t\t\t\tcase 'groups':\n\t\t\t\t\t\t\treturn { id: collaborator.id, label: collaborator.label, type: ShareType.Group }\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(`Invalid collaborator source ${collaborator.source}`)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\tthis.availableCollaborators = {\n\t\t\t\t\t...this.availableCollaborators,\n\t\t\t\t\t...this.currentSearchResults.reduce(this.indexCollaborators, {}),\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.errorFetchingCollaborators = error\n\t\t\t\tlogger.error(this.t('photos', 'Failed to fetch collaborators list.'), { error })\n\t\t\t\tshowError(this.t('photos', 'Failed to fetch collaborators list.'))\n\t\t\t} finally {\n\t\t\t\tthis.loadingCollaborators = false\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Populate selectedCollaboratorsKeys and availableCollaborators.\n\t\t */\n\t\tpopulateCollaborators(collaborators: Collaborator[]) {\n\t\t\tconst initialCollaborators = collaborators.reduce(this.indexCollaborators, {})\n\t\t\tthis.selectedCollaboratorsKeys = Object.keys(initialCollaborators)\n\t\t\tthis.availableCollaborators = {\n\t\t\t\t3: {\n\t\t\t\t\tid: '',\n\t\t\t\t\tlabel: this.t('photos', 'Public link'),\n\t\t\t\t\ttype: ShareType.Link,\n\t\t\t\t},\n\t\t\t\t...this.availableCollaborators,\n\t\t\t\t...initialCollaborators,\n\t\t\t}\n\t\t},\n\n\t\tindexCollaborators(collaborators: Record<string, Collaborator>, collaborator: Collaborator) {\n\t\t\treturn { ...collaborators, [`${collaborator.type}${collaborator.type === ShareType.Link ? '' : ':'}${collaborator.type === ShareType.Link ? '' : collaborator.id}`]: collaborator }\n\t\t},\n\n\t\tasync createPublicLinkForAlbum() {\n\t\t\tthis.selectEntity(`${ShareType.Link}`)\n\t\t\tawait this.updateAlbumCollaborators()\n\t\t\tawait this.fetchCollection(\n\t\t\t\tthis.albumFileName,\n\t\t\t\t['<nc:location />', '<nc:dateRange />', '<nc:collaborators />'],\n\t\t\t)\n\t\t},\n\n\t\tasync deletePublicLink() {\n\t\t\tthis.unselectEntity(`${ShareType.Link}`)\n\t\t\tthis.availableCollaborators[3] = {\n\t\t\t\tid: '',\n\t\t\t\tlabel: this.t('photos', 'Public link'),\n\t\t\t\ttype: ShareType.Link,\n\t\t\t}\n\t\t\tthis.publicLinkCopied = false\n\t\t\tawait this.updateAlbumCollaborators()\n\t\t},\n\n\t\tasync updateAlbumCollaborators() {\n\t\t\ttry {\n\t\t\t\tawait this.updateCollection({\n\t\t\t\t\tcollectionFileName: this.albumFileName,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tcollaborators: this.selectedCollaborators,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('[PublicAlbumContent] Error updating album', { error })\n\t\t\t\tshowError(this.t('photos', 'Failed to update album.'))\n\t\t\t}\n\t\t},\n\n\t\tasync copyPublicLink() {\n\t\t\tawait navigator.clipboard.writeText(this.publicLinkURL)\n\t\t\tthis.publicLinkCopied = true\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.publicLinkCopied = false\n\t\t\t}, 10000)\n\t\t},\n\n\t\tselectEntity(collaboratorKey) {\n\t\t\tthis.searchText = null\n\n\t\t\tif (this.selectedCollaboratorsKeys.includes(collaboratorKey)) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.selectedCollaboratorsKeys.push(collaboratorKey)\n\t\t},\n\n\t\tunselectEntity(collaboratorKey) {\n\t\t\tconst index = this.selectedCollaboratorsKeys.indexOf(collaboratorKey)\n\n\t\t\tif (index === -1) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.selectedCollaboratorsKeys.splice(index, 1)\n\t\t},\n\n\t\tt: translate,\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n.manage-collaborators {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 20px;\n\theight: 500px;\n\n\t&__title {\n\t\tfont-weight: bold;\n\t}\n\n\t&__subtitle {\n\t\tcolor: var(--color-text-lighter);\n\t}\n\n\t&__public-link-button {\n\t\tmargin: 4px 0;\n\t}\n\n\t&__form {\n\t\tmargin-top: 4px 0;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\t&__input {\n\t\t\tposition: relative;\n\t\t\tdisplay: block;\n\n\t\t\tinput {\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding-left: 34px;\n\t\t\t}\n\n\t\t\t.loading-icon {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: calc(36px / 2 - 20px / 2);\n\t\t\t\tright: 8px;\n\t\t\t}\n\t\t}\n\n\t\t&__list {\n\t\t\tpadding: 8px;\n\t\t\theight: 350px;\n\t\t\toverflow: scroll;\n\n\t\t\t&__result {\n\t\t\t\tpadding: 8px;\n\t\t\t\tborder-radius: 100px;\n\t\t\t\tbox-sizing: border-box;\n\n\t\t\t\t&, & * {\n\t\t\t\t\tcursor: pointer !important;\n\t\t\t\t}\n\n\t\t\t\t&:hover {\n\t\t\t\t\tbackground: var(--color-background-dark);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&--empty {\n\t\t\t\tmargin: 100px 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t&__selection {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmargin-top: 32px;\n\t\tflex-grow: 1;\n\n\t\t&__item {\n\t\t\tborder-radius: var(--border-radius-pill);\n\t\t\tpadding:  0 8px;\n\n\t\t\t&:hover {\n\t\t\t\tbackground: var(--color-background-dark);\n\t\t\t}\n\n\t\t\t:deep(.option) {\n\t\t\t\tgap: 4px;\n\t\t\t}\n\t\t}\n\t}\n\n\t.actions {\n\t\tdisplay: flex;\n\t\tmargin-top: 8px;\n\n\t\t&__public-link {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\n\t\t\tbutton {\n\t\t\t\tmargin-left: 8px;\n\t\t\t}\n\t\t}\n\n\t\t&__slot {\n\t\t\tflex-grow: 1;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-end;\n\t\t\talign-items: center;\n\t\t}\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<form v-if=\"!showCollaboratorView\" class=\"album-form\" @submit.prevent=\"submit\">\n\t\t<div class=\"form-inputs\">\n\t\t\t<NcTextField ref=\"nameInput\"\n\t\t\t\t:value.sync=\"albumName\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"name\"\n\t\t\t\t:required=\"true\"\n\t\t\t\t:label=\"t('photos', 'Name of the album')\" />\n\t\t\t<NcTextField :value.sync=\"albumLocation\"\n\t\t\t\tname=\"location\"\n\t\t\t\ttype=\"text\"\n\t\t\t\t:label=\"t('photos', 'Location of the album')\">\n\t\t\t\t<template #default>\n\t\t\t\t\t<MapMarker :size=\"20\" />\n\t\t\t\t</template>\n\t\t\t</NcTextField>\n\t\t</div>\n\t\t<div class=\"form-buttons\">\n\t\t\t<span class=\"left-buttons\">\n\t\t\t\t<NcButton v-if=\"displayBackButton\"\n\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t@click=\"back\">\n\t\t\t\t\t{{ t('photos', 'Back') }}\n\t\t\t\t</NcButton>\n\t\t\t</span>\n\t\t\t<span class=\"right-buttons\">\n\t\t\t\t<NcButton v-if=\"sharingEnabled && !editMode\"\n\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t:disabled=\"albumName.trim() === '' || loading\"\n\t\t\t\t\t@click=\"showCollaboratorView = true\">\n\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t<AccountMultiplePlus :size=\"20\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t{{ t('photos', 'Add collaborators') }}\n\t\t\t\t</NcButton>\n\t\t\t\t<NcButton type=\"primary\"\n\t\t\t\t\t:disabled=\"albumName === '' || loading\"\n\t\t\t\t\t@click=\"submit()\">\n\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t<NcLoadingIcon v-if=\"loading\" :size=\"20\" />\n\t\t\t\t\t\t<Send v-else :size=\"20\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t{{ editMode ? t('photos', 'Save') : t('photos', 'Create album') }}\n\t\t\t\t</NcButton>\n\t\t\t</span>\n\t\t</div>\n\t</form>\n\t<CollaboratorsSelectionForm v-else\n\t\t:album-name=\"albumName\"\n\t\t:allow-public-link=\"false\">\n\t\t<template #default=\"{ collaborators }\">\n\t\t\t<span class=\"left-buttons\">\n\t\t\t\t<NcButton type=\"tertiary\"\n\t\t\t\t\t@click=\"showCollaboratorView = false\">\n\t\t\t\t\t{{ t('photos', 'Back') }}\n\t\t\t\t</NcButton>\n\t\t\t</span>\n\t\t\t<span class=\"right-buttons\">\n\t\t\t\t<NcButton type=\"primary\"\n\t\t\t\t\t:disabled=\"albumName.trim() === '' || loading\"\n\t\t\t\t\t@click=\"submit(collaborators)\">\n\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t<NcLoadingIcon v-if=\"loading\" :size=\"20\" />\n\t\t\t\t\t\t<Send v-else :size=\"20\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t{{ editMode ? t('photos', 'Save') : t('photos', 'Create album') }}\n\t\t\t\t</NcButton>\n\t\t\t</span>\n\t\t</template>\n\t</CollaboratorsSelectionForm>\n</template>\n<script lang='ts'>\nimport { mapActions } from 'vuex'\n\nimport MapMarker from 'vue-material-design-icons/MapMarker.vue'\nimport AccountMultiplePlus from 'vue-material-design-icons/AccountMultiplePlus.vue'\nimport Send from 'vue-material-design-icons/Send.vue'\n\nimport { NcButton, NcLoadingIcon, NcTextField } from '@nextcloud/vue'\nimport moment from '@nextcloud/moment'\nimport { translate } from '@nextcloud/l10n'\nimport { generateRemoteUrl } from '@nextcloud/router'\n\nimport CollaboratorsSelectionForm from './CollaboratorsSelectionForm.vue'\nimport type { Album, Collaborator } from '../../store/albums'\nimport type { PropType } from 'vue'\n\nexport default {\n\tname: 'AlbumForm',\n\n\tcomponents: {\n\t\tMapMarker,\n\t\tAccountMultiplePlus,\n\t\tSend,\n\t\tNcButton,\n\t\tNcLoadingIcon,\n\t\tNcTextField,\n\t\tCollaboratorsSelectionForm,\n\t},\n\n\tprops: {\n\t\talbum: {\n\t\t\ttype: Object as PropType<Album|null>,\n\t\t\tdefault: null,\n\t\t},\n\t\tdisplayBackButton: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tshowCollaboratorView: false,\n\t\t\talbumName: '',\n\t\t\talbumLocation: '',\n\t\t\tloading: false,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\teditMode(): boolean {\n\t\t\treturn this.album !== null\n\t\t},\n\n\t\tsharingEnabled(): boolean {\n\t\t\treturn OC.Share !== undefined\n\t\t},\n\n\t\talbumFileName(): string {\n\t\t\treturn this.$store.getters.getAlbumName(this.albumName)\n\t\t},\n\t},\n\n\tmounted() {\n\t\tif (this.editMode) {\n\t\t\tthis.albumName = this.album.basename\n\t\t\tthis.albumLocation = this.album.location ?? ''\n\t\t}\n\n\t\tthis.$nextTick(() => {\n\t\t\tthis.$refs.nameInput.$el.getElementsByTagName('input')[0].focus()\n\t\t})\n\t},\n\n\tmethods: {\n\t\t...mapActions(['createCollection', 'renameCollection', 'updateCollection']),\n\n\t\tsubmit(collaborators: Collaborator[] = []) {\n\t\t\tif (this.albumName === '' || this.loading) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.handleUpdateAlbum()\n\t\t\t} else {\n\t\t\t\tthis.handleCreateAlbum(collaborators)\n\t\t\t}\n\t\t},\n\n\t\tasync handleCreateAlbum(collaborators: Collaborator[] = []) {\n\t\t\ttry {\n\t\t\t\tthis.loading = true\n\t\t\t\tlet album = await this.createCollection({\n\t\t\t\t\tcollection: {\n\t\t\t\t\t\tbasename: this.albumName,\n\t\t\t\t\t\tfilename: this.albumFileName,\n\t\t\t\t\t\tnbItems: 0,\n\t\t\t\t\t\tlocation: this.albumLocation,\n\t\t\t\t\t\tlastPhoto: -1,\n\t\t\t\t\t\tdate: moment().format('MMMM YYYY'),\n\t\t\t\t\t\tcollaborators,\n\t\t\t\t\t\tsource: generateRemoteUrl(`dav/${this.albumFileName}`),\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tif (album === undefined) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (this.albumLocation !== '' || collaborators.length !== 0) {\n\t\t\t\t\talbum = await this.updateCollection(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcollectionFileName: this.albumFileName,\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tlocation: this.albumLocation,\n\t\t\t\t\t\t\t\tcollaborators,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.$emit('done', { album })\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\n\t\tasync handleUpdateAlbum() {\n\t\t\ttry {\n\t\t\t\tthis.loading = true\n\n\t\t\t\tlet album = { ...this.album }\n\n\t\t\t\tif (this.album.basename !== this.albumName) {\n\t\t\t\t\talbum = await this.renameCollection({ collectionFileName: this.album.filename, newBaseName: this.albumName })\n\t\t\t\t}\n\n\t\t\t\tif (this.album.location !== this.albumLocation) {\n\t\t\t\t\talbum = await this.updateCollection({ collectionFileName: album.filename, properties: { location: this.albumLocation } })\n\t\t\t\t}\n\n\t\t\t\tthis.$emit('done', { album })\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\n\t\tback() {\n\t\t\tthis.$emit('back')\n\t\t},\n\n\t\tt: translate,\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n.album-form {\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 350px;\n\tpadding: calc(var(--default-grid-baseline) * 4);\n\n\t.form-title {\n\t\tfont-weight: bold;\n\t}\n\n\t.form-subtitle {\n\t\tcolor: var(--color-text-lighter);\n\t}\n\n\t.form-inputs {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: calc(var(--default-grid-baseline) * 4);\n\t}\n\n\t.form-buttons {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\tflex-direction: column;\n\n\t\t.left-buttons, .right-buttons {\n\t\t\tdisplay: flex;\n\t\t\tgap: calc(var(--default-grid-baseline) * 4);\n\t\t}\n\n\t\t.right-buttons {\n\t\t\tjustify-content: flex-end;\n\t\t}\n\t}\n}\n\n.left-buttons {\n\tflex-grow: 1;\n}\n\n@media only screen and (max-width: 1020px) {\n\t.right-buttons {\n\t\tjustify-content: flex-end;\n\t\tflex-direction: column;\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<div>\n\t\t<CollectionsList :collections=\"albums\"\n\t\t\t:loading=\"loadingCollections\"\n\t\t\t:error=\"errorFetchingCollections\"\n\t\t\tclass=\"albums-list\">\n\t\t\t<HeaderNavigation key=\"navigation\"\n\t\t\t\tslot=\"header\"\n\t\t\t\t:loading=\"loadingCollections\"\n\t\t\t\t:title=\"t('photos', 'Albums')\"\n\t\t\t\t:root-title=\"t('photos', 'Albums')\"\n\t\t\t\t@refresh=\"fetchAlbums\">\n\t\t\t\t<NcButton :aria-label=\"isMobile ? t('photos', 'New album') : undefined\"\n\t\t\t\t\t@click=\"showAlbumCreationForm = true\">\n\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t<Plus :size=\"20\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-if=\"!isMobile\" #default>\n\t\t\t\t\t\t{{ t('photos', 'New album') }}\n\t\t\t\t\t</template>\n\t\t\t\t</NcButton>\n\t\t\t</HeaderNavigation>\n\n\t\t\t<CollectionCover :key=\"collection.basename\"\n\t\t\t\tslot-scope=\"{collection}\"\n\t\t\t\t:link=\"`/albums/${collection.basename}`\"\n\t\t\t\t:alt-img=\"t('photos', 'Cover photo for album {albumName}', { albumName: collection.basename })\"\n\t\t\t\t:cover-url=\"collection.lastPhoto | coverUrl\">\n\t\t\t\t<span class=\"album__name\">\n\t\t\t\t\t{{ collection.basename }}\n\t\t\t\t</span>\n\n\t\t\t\t<div slot=\"subtitle\" class=\"album__details\">\n\t\t\t\t\t{{ collection.date }} ⸱ {{ n('photos', '%n item', '%n photos and videos', collection.nbItems,) }}\n\t\t\t\t</div>\n\t\t\t</CollectionCover>\n\n\t\t\t<NcEmptyContent slot=\"empty-collections-list\" :name=\"t('photos', 'There is no album yet!')\">\n\t\t\t\t<FolderMultipleImage slot=\"icon\" />\n\t\t\t</NcEmptyContent>\n\t\t</CollectionsList>\n\n\t\t<NcModal v-if=\"showAlbumCreationForm\"\n\t\t\t@close=\"showAlbumCreationForm = false\">\n\t\t\t<h2 class=\"album-creation__heading\">\n\t\t\t\t{{ t('photos', 'New album') }}\n\t\t\t</h2>\n\t\t\t<AlbumForm @done=\"handleAlbumCreated\" />\n\t\t</NcModal>\n\t</div>\n</template>\n\n<script lang='ts'>\nimport Plus from 'vue-material-design-icons/Plus.vue'\nimport FolderMultipleImage from 'vue-material-design-icons/FolderMultipleImage.vue'\n\nimport { generateUrl } from '@nextcloud/router'\nimport { NcModal, NcButton, NcEmptyContent, useIsSmallMobile } from '@nextcloud/vue'\nimport { translate, translatePlural } from '@nextcloud/l10n'\nimport { getCurrentUser } from '@nextcloud/auth'\n\nimport CollectionsList from '../components/Collection/CollectionsList.vue'\nimport CollectionCover from '../components/Collection/CollectionCover.vue'\nimport HeaderNavigation from '../components/HeaderNavigation.vue'\nimport AlbumForm from '../components/Albums/AlbumForm.vue'\nimport FetchCollectionsMixin from '../mixins/FetchCollectionsMixin.js'\nimport type { Album } from '../store/albums.js'\n\nexport default {\n\tname: 'Albums',\n\tcomponents: {\n\t\tPlus,\n\t\tFolderMultipleImage,\n\t\tNcModal,\n\t\tNcButton,\n\t\tNcEmptyContent,\n\t\tCollectionsList,\n\t\tCollectionCover,\n\t\tHeaderNavigation,\n\t\tAlbumForm,\n\t},\n\n\tfilters: {\n\t\t/**\n\t\t * @param {string} lastPhoto The album's last photos.\n\t\t */\n\t\tcoverUrl(lastPhoto) {\n\t\t\tif (lastPhoto === -1) {\n\t\t\t\treturn ''\n\t\t\t}\n\n\t\t\treturn generateUrl(`/apps/photos/api/v1/preview/${lastPhoto}?x=${512}&y=${512}`)\n\t\t},\n\t},\n\n\tmixins: [\n\t\tFetchCollectionsMixin,\n\t],\n\n\tsetup() {\n\t\tconst isMobile = useIsSmallMobile()\n\t\treturn {\n\t\t\tisMobile,\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tshowAlbumCreationForm: false,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\talbums(): Record<string, Album> {\n\t\t\treturn this.$store.getters.albums\n\t\t},\n\t},\n\n\tasync beforeMount() {\n\t\tthis.fetchAlbums()\n\t},\n\n\tmethods: {\n\t\tfetchAlbums() {\n\t\t\tthis.fetchCollections(\n\t\t\t\t`/photos/${getCurrentUser()?.uid}/albums`,\n\t\t\t\t['<nc:location />', '<nc:dateRange />', '<nc:collaborators />'],\n\t\t\t)\n\t\t},\n\n\t\thandleAlbumCreated({ album }) {\n\t\t\tthis.showAlbumCreationForm = false\n\t\t\tthis.$router.push(`albums/${album.basename}`)\n\t\t},\n\n\t\tt: translate,\n\t\tn: translatePlural,\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n.albums-list {\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t.album__name {\n\t\tfont-weight: normal;\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tfont-size: 20px;\n\t\tmargin-bottom: 12px;\n\t\tline-height: 30px;\n\t\tcolor: var(--color-main-text);\n\t}\n}\n\n.album-creation__heading {\n\tpadding: calc(var(--default-grid-baseline) * 4);\n\tmargin-bottom: 0px;\n\tpadding-bottom: 0px;\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<div class=\"album-container\">\n\t\t<CollectionContent ref=\"collectionContent\"\n\t\t\t:collection=\"album\"\n\t\t\t:collection-file-ids=\"albumFileIds\"\n\t\t\t:loading=\"loadingCollection || loadingCollectionFiles\"\n\t\t\t:error=\"errorFetchingCollection || errorFetchingCollectionFiles\">\n\t\t\t<!-- Header -->\n\t\t\t<HeaderNavigation key=\"navigation\"\n\t\t\t\tslot=\"header\"\n\t\t\t\tslot-scope=\"{selectedFileIds, resetSelection}\"\n\t\t\t\t:loading=\"loadingCollectionFiles\"\n\t\t\t\t:params=\"{ albumName }\"\n\t\t\t\t:path=\"'/' + albumName\"\n\t\t\t\t:title=\"albumName\"\n\t\t\t\t@refresh=\"fetchAlbumContent\">\n\t\t\t\t<div v-if=\"album !== undefined && album.location !== ''\"\n\t\t\t\t\tslot=\"subtitle\"\n\t\t\t\t\tclass=\"album__location\">\n\t\t\t\t\t<MapMarker />{{ album.location }}\n\t\t\t\t</div>\n\n\t\t\t\t<template slot=\"default\">\n\t\t\t\t\t<NcButton v-if=\"selectedFileIds.length > 0\"\n\t\t\t\t\t\t:aria-label=\"t('photos', 'Unselect all')\"\n\t\t\t\t\t\t@click=\"resetSelection\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t{{ t('photos', 'Unselect all') }}\n\t\t\t\t\t</NcButton>\n\t\t\t\t</template>\n\n\t\t\t\t<template v-if=\"album !== undefined\" slot=\"right\">\n\t\t\t\t\t<NcButton @click=\"showAddPhotosModal = true\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<Plus :size=\"20\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t{{ t('photos', 'Add photos to this album' ) }}\n\t\t\t\t\t</NcButton>\n\n\t\t\t\t\t<NcButton v-if=\"sharingEnabled\"\n\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t:aria-label=\"t('photos', 'Manage collaborators for this album')\"\n\t\t\t\t\t\t@click=\"showManageCollaboratorView = true\">\n\t\t\t\t\t\t<ShareVariant slot=\"icon\" />\n\t\t\t\t\t</NcButton>\n\n\t\t\t\t\t<NcActions :aria-label=\"t('photos', 'Open actions menu')\">\n\t\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t\t:aria-label=\"t('photos', 'Edit album details')\"\n\t\t\t\t\t\t\t@click=\"showEditAlbumForm = true\">\n\t\t\t\t\t\t\t{{ t('photos', 'Edit album details') }}\n\t\t\t\t\t\t\t<Pencil slot=\"icon\" />\n\t\t\t\t\t\t</NcActionButton>\n\n\t\t\t\t\t\t<!-- Support download from arbitrary origin\n\t\t\t\t\t\t<ActionDownload v-if=\"albumFileIds.length > 0\"\n\t\t\t\t\t\t\t:selected-file-ids=\"albumFileIds\"\n\t\t\t\t\t\t\t:title=\"t('photos', 'Download all files in album')\">\n\t\t\t\t\t\t\t<DownloadMultiple slot=\"icon\" />\n\t\t\t\t\t\t</ActionDownload>-->\n\n\t\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t\t@click=\"handleDeleteAlbum\">\n\t\t\t\t\t\t\t{{ t('photos', 'Delete album') }}\n\t\t\t\t\t\t\t<Delete slot=\"icon\" />\n\t\t\t\t\t\t</NcActionButton>\n\n\t\t\t\t\t\t<template v-if=\"selectedFileIds.length > 0\">\n\t\t\t\t\t\t\t<NcActionSeparator />\n\n\t\t\t\t\t\t\t<!-- Support download from arbitrary origin\n\t\t\t\t\t\t\t<ActionDownload :selected-file-ids=\"selectedFileIds\" :title=\"t('photos', 'Download selected files')\">\n\t\t\t\t\t\t\t\t<Download slot=\"icon\" />\n\t\t\t\t\t\t\t</ActionDownload>-->\n\n\t\t\t\t\t\t\t<ActionFavorite :selected-file-ids=\"selectedFileIds\" />\n\n\t\t\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t\t\t@click=\"handleRemoveFilesFromAlbum(selectedFileIds)\">\n\t\t\t\t\t\t\t\t{{ t('photos', 'Remove selection from album') }}\n\t\t\t\t\t\t\t\t<Close slot=\"icon\" />\n\t\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</NcActions>\n\t\t\t\t</template>\n\t\t\t</HeaderNavigation>\n\n\t\t\t<!-- No content -->\n\t\t\t<NcEmptyContent v-if=\"album !== undefined && album.nbItems === 0 && !(loadingCollectionFiles || loadingCollection)\"\n\t\t\t\tslot=\"empty-content\"\n\t\t\t\t:name=\"t('photos', 'This album does not have any photos or videos yet!')\"\n\t\t\t\tclass=\"album__empty\">\n\t\t\t\t<ImagePlus slot=\"icon\" />\n\n\t\t\t\t<NcButton slot=\"action\"\n\t\t\t\t\tclass=\"album__empty__button\"\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t:aria-label=\"t('photos', 'Add photos to this album')\"\n\t\t\t\t\t@click=\"showAddPhotosModal = true\">\n\t\t\t\t\t<Plus slot=\"icon\" />\n\t\t\t\t\t{{ t('photos', \"Add\") }}\n\t\t\t\t</NcButton>\n\t\t\t</NcEmptyContent>\n\t\t</CollectionContent>\n\n\t\t<PhotosPicker v-if=\"album !== undefined\"\n\t\t\t:open.sync=\"showAddPhotosModal\"\n\t\t\t:blacklist-ids=\"albumFileIds\"\n\t\t\t:destination=\"album.basename\"\n\t\t\t:name=\"t('photos', 'Add photos to {albumName}', {albumName: albumName})\"\n\t\t\t@files-picked=\"handleFilesPicked\" />\n\n\t\t<NcModal v-if=\"showManageCollaboratorView && album !== undefined\"\n\t\t\t:name=\"t('photos', 'Manage collaborators')\"\n\t\t\t@close=\"showManageCollaboratorView = false\">\n\t\t\t<CollaboratorsSelectionForm :album-name=\"album.basename\"\n\t\t\t\t:collaborators=\"album.collaborators\">\n\t\t\t\t<template slot-scope=\"{collaborators}\">\n\t\t\t\t\t<NcButton :aria-label=\"t('photos', 'Save collaborators for this album.')\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t:disabled=\"loadingAddCollaborators\"\n\t\t\t\t\t\t@click=\"handleSetCollaborators(collaborators)\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<NcLoadingIcon v-if=\"loadingAddCollaborators\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t{{ t('photos', 'Save') }}\n\t\t\t\t\t</NcButton>\n\t\t\t\t</template>\n\t\t\t</CollaboratorsSelectionForm>\n\t\t</NcModal>\n\n\t\t<NcDialog v-if=\"showEditAlbumForm\"\n\t\t\t:name=\"t('photos', 'Edit album details')\"\n\t\t\tclose-on-click-outside\n\t\t\tsize=\"normal\"\n\t\t\t@closing=\"showEditAlbumForm = false\">\n\t\t\t<AlbumForm :album=\"album\" @done=\"redirectToNewName\" />\n\t\t</NcDialog>\n\t</div>\n</template>\n\n<script lang='ts'>\nimport { mapActions } from 'vuex'\n\nimport { NcActions, NcActionButton, NcButton, NcDialog, NcModal, NcEmptyContent, NcActionSeparator, NcLoadingIcon, isMobile } from '@nextcloud/vue'\nimport { translate } from '@nextcloud/l10n'\n\nimport Close from 'vue-material-design-icons/Close.vue'\nimport Delete from 'vue-material-design-icons/Delete.vue'\n// import Download from 'vue-material-design-icons/Download.vue'\n// import DownloadMultiple from 'vue-material-design-icons/DownloadMultiple.vue'\nimport ImagePlus from 'vue-material-design-icons/ImagePlus.vue'\nimport MapMarker from 'vue-material-design-icons/MapMarker.vue'\nimport Pencil from 'vue-material-design-icons/Pencil.vue'\nimport Plus from 'vue-material-design-icons/Plus.vue'\nimport ShareVariant from 'vue-material-design-icons/ShareVariant.vue'\n\nimport FetchFilesMixin from '../mixins/FetchFilesMixin.js'\nimport FetchCollectionContentMixin from '../mixins/FetchCollectionContentMixin.js'\n\n// import ActionDownload from '../components/Actions/ActionDownload.vue'\nimport ActionFavorite from '../components/Actions/ActionFavorite.vue'\nimport AlbumForm from '../components/Albums/AlbumForm.vue'\nimport CollaboratorsSelectionForm from '../components/Albums/CollaboratorsSelectionForm.vue'\nimport CollectionContent from '../components/Collection/CollectionContent.vue'\nimport PhotosPicker from '../components/PhotosPicker.vue'\nimport HeaderNavigation from '../components/HeaderNavigation.vue'\n\nimport logger from '../services/logger.js'\nimport type { Album } from '../store/albums.js'\n\nexport default {\n\tname: 'AlbumContent',\n\tcomponents: {\n\t\t// ActionDownload,\n\t\tActionFavorite,\n\t\tAlbumForm,\n\t\tClose,\n\t\tCollaboratorsSelectionForm,\n\t\tCollectionContent,\n\t\tDelete,\n\t\t// Download,\n\t\t// DownloadMultiple,\n\t\tPhotosPicker,\n\t\tHeaderNavigation,\n\t\tImagePlus,\n\t\tMapMarker,\n\t\tNcActionButton,\n\t\tNcActions,\n\t\tNcActionSeparator,\n\t\tNcButton,\n\t\tNcDialog,\n\t\tNcEmptyContent,\n\t\tNcLoadingIcon,\n\t\tNcModal,\n\t\tPencil,\n\t\tPlus,\n\t\tShareVariant,\n\t},\n\n\tmixins: [\n\t\tFetchCollectionContentMixin,\n\t\tFetchFilesMixin,\n\t\tisMobile,\n\t],\n\n\tprops: {\n\t\talbumName: {\n\t\t\ttype: String,\n\t\t\tdefault: '/',\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tshowAddPhotosModal: false,\n\t\t\tshowManageCollaboratorView: false,\n\t\t\tshowEditAlbumForm: false,\n\n\t\t\tloadingAddCollaborators: false,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\talbum(): Album|undefined {\n\t\t\treturn this.$store.getters.getAlbum(this.albumName)\n\t\t},\n\n\t\talbumFileIds(): string[] {\n\t\t\treturn this.$store.getters.getAlbumFiles(this.albumName)\n\t\t},\n\n\t\tsharingEnabled(): boolean {\n\t\t\treturn OC.Share !== undefined\n\t\t},\n\n\t\talbumFileName(): string {\n\t\t\treturn this.$store.getters.getAlbumName(this.albumName)\n\t\t},\n\t},\n\n\tasync mounted() {\n\t\tthis.fetchAlbum()\n\t\tthis.fetchAlbumContent()\n\t},\n\n\tmethods: {\n\t\t...mapActions([\n\t\t\t'addFilesToCollection',\n\t\t\t'removeFilesFromCollection',\n\t\t\t'deleteCollection',\n\t\t\t'updateCollection',\n\t\t]),\n\n\t\tasync fetchAlbum() {\n\t\t\tawait this.fetchCollection(\n\t\t\t\tthis.albumFileName,\n\t\t\t\t['<nc:location />', '<nc:dateRange />', '<nc:collaborators />'],\n\t\t\t)\n\t\t},\n\n\t\tasync fetchAlbumContent() {\n\t\t\tawait this.fetchCollectionFiles(this.albumFileName)\n\t\t},\n\n\t\tredirectToNewName({ album }) {\n\t\t\tthis.showEditAlbumForm = false\n\n\t\t\tif (this.album.basename !== album.basename) {\n\t\t\t\tthis.$router.push(`/albums/${album.basename}`)\n\t\t\t}\n\t\t},\n\n\t\tasync handleFilesPicked(fileIds) {\n\t\t\tthis.showAddPhotosModal = false\n\t\t\tawait this.addFilesToCollection({ collectionFileName: this.album.filename, fileIdsToAdd: fileIds })\n\t\t\t// Re-fetch album content to have the proper filenames.\n\t\t\tawait this.fetchAlbumContent()\n\t\t},\n\n\t\tasync handleRemoveFilesFromAlbum(fileIds) {\n\t\t\tthis.$refs.collectionContent.onUncheckFiles(fileIds)\n\t\t\tawait this.removeFilesFromCollection({ collectionFileName: this.album.filename, fileIdsToRemove: fileIds })\n\t\t},\n\n\t\tasync handleDeleteAlbum() {\n\t\t\tawait this.deleteCollection({ collectionFileName: this.album.filename })\n\t\t\tthis.$router.push('/albums')\n\t\t},\n\n\t\tasync handleSetCollaborators(collaborators) {\n\t\t\ttry {\n\t\t\t\tthis.loadingAddCollaborators = true\n\t\t\t\tthis.showManageCollaboratorView = false\n\t\t\t\tawait this.updateCollection({ collectionFileName: this.album.filename, properties: { collaborators } })\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Error while setting album collaborators', { error })\n\t\t\t} finally {\n\t\t\t\tthis.loadingAddCollaborators = false\n\t\t\t}\n\t\t},\n\n\t\tt: translate,\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n.album-container {\n\theight: 100%;\n\n\t:deep(.collection) {\n\t\theight: 100%;\n\t}\n}\n\n.album {\n\t&__title {\n\t\twidth: 100%;\n\t}\n\n\t&__name {\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\t&__location {\n\t\tmargin-left: -4px;\n\t\tdisplay: flex;\n\t\tcolor: var(--color-text-lighter);\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<CollectionsList :collections=\"sharedAlbums\"\n\t\t:loading=\"loadingCollections\"\n\t\t:error=\"errorFetchingCollections\"\n\t\tclass=\"albums-list\">\n\t\t<HeaderNavigation key=\"navigation\"\n\t\t\tslot=\"header\"\n\t\t\t:loading=\"loadingCollections\"\n\t\t\t:title=\"t('photos', 'Collaborative albums')\"\n\t\t\t:root-title=\"t('photos', 'Collaborative albums')\"\n\t\t\t@refresh=\"fetchSharedAlbums\" />\n\n\t\t<CollectionCover :key=\"collection.basename\"\n\t\t\tslot-scope=\"{collection}\"\n\t\t\t:link=\"`/sharedalbums/${collection.basename}`\"\n\t\t\t:alt-img=\"t('photos', 'Cover photo for shared album {albumName}', { albumName: collection.basename })\"\n\t\t\t:data-test=\"collection.basename\"\n\t\t\t:cover-url=\"collection.lastPhoto | coverUrl\">\n\t\t\t<span class=\"album__name\">\n\t\t\t\t{{ collection | albumOriginalName }}\n\t\t\t</span>\n\n\t\t\t<div slot=\"subtitle\" class=\"album__details\">\n\t\t\t\t{{ collection.date }} ⸱ {{ n('photos', '%n item', '%n photos and videos', collection.nbItems,) }}\n\t\t\t\t<br>\n\t\t\t\t{{ t('photos', 'Shared by') }}&nbsp;<NcUserBubble :display-name=\"collection.collaborators[0].label\" :user=\"collection.collaborators[0].id\" />\n\t\t\t</div>\n\t\t</CollectionCover>\n\n\t\t<NcEmptyContent slot=\"empty-collections-list\" :name=\"t('photos', 'There is no album yet!')\">\n\t\t\t<FolderMultipleImage slot=\"icon\" />\n\t\t</NcEmptyContent>\n\t</CollectionsList>\n</template>\n\n<script lang='ts'>\nimport FolderMultipleImage from 'vue-material-design-icons/FolderMultipleImage.vue'\n\nimport { generateUrl } from '@nextcloud/router'\nimport { NcEmptyContent, NcUserBubble } from '@nextcloud/vue'\nimport { translate, translatePlural } from '@nextcloud/l10n'\nimport { getCurrentUser } from '@nextcloud/auth'\n\nimport CollectionsList from '../components/Collection/CollectionsList.vue'\nimport CollectionCover from '../components/Collection/CollectionCover.vue'\nimport HeaderNavigation from '../components/HeaderNavigation.vue'\nimport FetchCollectionsMixin from '../mixins/FetchCollectionsMixin.js'\nimport type { Album } from '../store/albums.js'\n\nexport default {\n\tname: 'SharedAlbums',\n\tcomponents: {\n\t\tFolderMultipleImage,\n\t\tNcEmptyContent,\n\t\tCollectionsList,\n\t\tCollectionCover,\n\t\tHeaderNavigation,\n\t\tNcUserBubble,\n\t},\n\n\tfilters: {\n\t\tcoverUrl(lastPhoto: number): string {\n\t\t\tif (lastPhoto === -1) {\n\t\t\t\treturn ''\n\t\t\t}\n\n\t\t\treturn generateUrl(`/apps/photos/api/v1/preview/${lastPhoto}?x=${512}&y=${512}`)\n\t\t},\n\n\t\talbumOriginalName(album: Album): string {\n\t\t\treturn album.basename.replace(new RegExp(`\\\\(${album.collaborators[0].id}\\\\)$`), '')\n\t\t},\n\t},\n\n\tmixins: [\n\t\tFetchCollectionsMixin,\n\t],\n\n\tcomputed: {\n\t\tsharedAlbums(): Record<string, Album> {\n\t\t\treturn this.$store.getters.sharedAlbums\n\t\t},\n\t},\n\n\tasync beforeMount() {\n\t\tthis.fetchSharedAlbums()\n\t},\n\n\tmethods: {\n\t\tfetchSharedAlbums() {\n\t\t\tthis.fetchCollections(\n\t\t\t\t`/photos/${getCurrentUser()?.uid}/sharedalbums`,\n\t\t\t\t['<nc:location />', '<nc:dateRange />', '<nc:collaborators />'],\n\t\t\t)\n\t\t},\n\n\t\tt: translate,\n\t\tn: translatePlural,\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n.albums-list {\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t.album__name {\n\t\tfont-weight: normal;\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\tfont-size: 20px;\n\t\tmargin-bottom: 12px;\n\t\tline-height: 30px;\n\t\tcolor: var(--color-main-text);\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<div>\n\t\t<CollectionContent v-if=\"true\"\n\t\t\tref=\"collectionContent\"\n\t\t\t:collection=\"album\"\n\t\t\t:collection-file-ids=\"albumFileIds\"\n\t\t\t:loading=\"loadingCollection || loadingCollectionFiles\"\n\t\t\t:error=\"errorFetchingCollection || errorFetchingCollectionFiles\">\n\t\t\t<!-- Header -->\n\t\t\t<HeaderNavigation key=\"navigation\"\n\t\t\t\tslot=\"header\"\n\t\t\t\tslot-scope=\"{selectedFileIds, resetSelection}\"\n\t\t\t\t:loading=\"loadingCollectionFiles\"\n\t\t\t\t:params=\"{ albumName }\"\n\t\t\t\t:path=\"'/' + albumName\"\n\t\t\t\t:title=\"albumOriginalName\"\n\t\t\t\t@refresh=\"fetchAlbumContent\">\n\t\t\t\t<div v-if=\"album !== undefined && album.location !== ''\" slot=\"subtitle\" class=\"album__location\">\n\t\t\t\t\t<MapMarker />{{ album.location }} ⸱ {{ t('photos', 'Shared by') }}&nbsp;<NcUserBubble :display-name=\"album.collaborators[0].label\" :user=\"album.collaborators[0].id\" />\n\t\t\t\t</div>\n\n\t\t\t\t<template slot=\"default\">\n\t\t\t\t\t<NcButton v-if=\"selectedFileIds.length > 0\"\n\t\t\t\t\t\t:aria-label=\"t('photos', 'Unselect all')\"\n\t\t\t\t\t\t@click=\"resetSelection\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t{{ t('photos', 'Unselect all') }}\n\t\t\t\t\t</NcButton>\n\t\t\t\t</template>\n\n\t\t\t\t<template v-if=\"album !== undefined\" slot=\"right\">\n\t\t\t\t\t<NcButton v-if=\"album.nbItems !== 0\"\n\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\t:aria-label=\"t('photos', 'Add photos to this album')\"\n\t\t\t\t\t\t@click=\"showAddPhotosModal = true\">\n\t\t\t\t\t\t<Plus slot=\"icon\" />\n\t\t\t\t\t\t{{ t('photos', \"Add\") }}\n\t\t\t\t\t</NcButton>\n\n\t\t\t\t\t<NcActions :force-menu=\"true\" :aria-label=\"t('photos', 'Open actions menu')\">\n\t\t\t\t\t\t<!-- TODO: enable download on shared albums -->\n\t\t\t\t\t\t<!-- <ActionDownload v-if=\"albumFileIds.length > 0\"\n\t\t\t\t\t\t\t:selected-file-ids=\"albumFileIds\"\n\t\t\t\t\t\t\t:title=\"t('photos', 'Download all files in album')\">\n\t\t\t\t\t\t\t<DownloadMultiple slot=\"icon\" />\n\t\t\t\t\t\t</ActionDownload> -->\n\n\t\t\t\t\t\t<NcActionButton v-if=\"album.collaborators[0].type === collaboratorTypes.SHARE_TYPE_USER\"\n\t\t\t\t\t\t\t:close-after-click=\"true\"\n\t\t\t\t\t\t\t@click=\"handleDeleteAlbum\">\n\t\t\t\t\t\t\t{{ t('photos', 'Delete album') }}\n\t\t\t\t\t\t\t<Delete slot=\"icon\" />\n\t\t\t\t\t\t</NcActionButton>\n\n\t\t\t\t\t\t<template v-if=\"selectedFileIds.length > 0\">\n\t\t\t\t\t\t\t<NcActionSeparator />\n\n\t\t\t\t\t\t\t<!-- TODO: enable download on shared albums -->\n\t\t\t\t\t\t\t<!-- <ActionDownload :selected-file-ids=\"selectedFileIds\" :title=\"t('photos', 'Download selected files')\">\n\t\t\t\t\t\t\t\t<Download slot=\"icon\" />\n\t\t\t\t\t\t\t</ActionDownload> -->\n\n\t\t\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t\t\t@click=\"handleRemoveFilesFromAlbum(selectedFileIds)\">\n\t\t\t\t\t\t\t\t{{ t('photos', 'Remove selection from album') }}\n\t\t\t\t\t\t\t\t<Close slot=\"icon\" />\n\t\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</NcActions>\n\t\t\t\t</template>\n\t\t\t</HeaderNavigation>\n\n\t\t\t<!-- No content -->\n\t\t\t<NcEmptyContent v-if=\"album !== undefined && album.nbItems === 0 && !(loadingCollectionFiles || loadingCollection)\"\n\t\t\t\tslot=\"empty-content\"\n\t\t\t\t:name=\"t('photos', 'This album does not have any photos or videos yet!')\"\n\t\t\t\tclass=\"album__empty\">\n\t\t\t\t<ImagePlus slot=\"icon\" />\n\n\t\t\t\t<NcButton slot=\"action\"\n\t\t\t\t\tclass=\"album__empty__button\"\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t:aria-label=\"t('photos', 'Add photos to this album')\"\n\t\t\t\t\t@click=\"showAddPhotosModal = true\">\n\t\t\t\t\t<Plus slot=\"icon\" />\n\t\t\t\t\t{{ t('photos', \"Add\") }}\n\t\t\t\t</NcButton>\n\t\t\t</NcEmptyContent>\n\t\t</CollectionContent>\n\n\t\t<PhotosPicker :open.sync=\"showAddPhotosModal\"\n\t\t\t:name=\"t('photos', 'Add photos to {albumName}', {albumName: albumOriginalName})\"\n\t\t\t:destination=\"album.basename\"\n\t\t\t:blacklist-ids=\"albumFileIds\"\n\t\t\t:loading=\"loadingAddFilesToAlbum\"\n\t\t\t@files-picked=\"handleFilesPicked\" />\n\t</div>\n</template>\n\n<script lang='ts'>\nimport { mapActions, mapGetters } from 'vuex'\n\nimport { NcActions, NcActionButton, NcButton, NcEmptyContent, NcActionSeparator, NcUserBubble, isMobile } from '@nextcloud/vue'\nimport { Type } from '@nextcloud/sharing'\nimport { translate } from '@nextcloud/l10n'\n\nimport MapMarker from 'vue-material-design-icons/MapMarker.vue'\nimport Plus from 'vue-material-design-icons/Plus.vue'\nimport Delete from 'vue-material-design-icons/Delete.vue'\nimport ImagePlus from 'vue-material-design-icons/ImagePlus.vue'\nimport Close from 'vue-material-design-icons/Close.vue'\n// import Download from 'vue-material-design-icons/Download.vue'\n// import DownloadMultiple from 'vue-material-design-icons/DownloadMultiple.vue'\n\nimport FetchFilesMixin from '../mixins/FetchFilesMixin.js'\nimport FetchCollectionContentMixin from '../mixins/FetchCollectionContentMixin.js'\n\nimport CollectionContent from '../components/Collection/CollectionContent.vue'\nimport HeaderNavigation from '../components/HeaderNavigation.vue'\n// import ActionDownload from '../components/Actions/ActionDownload.vue'\nimport PhotosPicker from '../components/PhotosPicker.vue'\nimport type { Album } from '../store/albums.js'\n\nexport default {\n\tname: 'SharedAlbumContent',\n\tcomponents: {\n\t\tMapMarker,\n\t\tPlus,\n\t\tClose,\n\t\t// Download,\n\t\t// DownloadMultiple,\n\t\tDelete,\n\t\tImagePlus,\n\t\tNcEmptyContent,\n\t\tNcActions,\n\t\tNcActionButton,\n\t\tNcActionSeparator,\n\t\tNcButton,\n\t\tNcUserBubble,\n\t\tCollectionContent,\n\t\t// ActionDownload,\n\t\tPhotosPicker,\n\t\tHeaderNavigation,\n\t},\n\n\tmixins: [\n\t\tFetchCollectionContentMixin,\n\t\tFetchFilesMixin,\n\t\tisMobile,\n\t],\n\n\tprops: {\n\t\talbumName: {\n\t\t\ttype: String,\n\t\t\tdefault: '/',\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tshowAddPhotosModal: false,\n\t\t\tloadingCount: 0,\n\t\t\tloadingAddFilesToAlbum: false,\n\t\t\tcollaboratorTypes: Type,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'files',\n\t\t\t'sharedAlbumsFiles',\n\t\t]),\n\n\t\talbum(): Album|undefined {\n\t\t\treturn this.$store.getters.getSharedAlbum(this.albumName)\n\t\t},\n\n\t\talbumFileIds(): string[] {\n\t\t\treturn this.$store.getters.getSharedAlbumFiles(this.albumName)\n\t\t},\n\n\t\talbumOriginalName(): string {\n\t\t\treturn this.albumName.replace(new RegExp(`\\\\(${this.album.collaborators[0].id}\\\\)$`), '')\n\t\t},\n\n\t\talbumFileName(): string {\n\t\t\treturn this.$store.getters.getSharedAlbumName(this.albumName)\n\t\t},\n\t},\n\n\tasync mounted() {\n\t\tthis.fetchAlbum()\n\t\tthis.fetchAlbumContent()\n\t},\n\n\tmethods: {\n\t\t...mapActions([\n\t\t\t'addFilesToCollection',\n\t\t\t'removeFilesFromCollection',\n\t\t\t'deleteCollection',\n\t\t]),\n\n\t\tasync fetchAlbum() {\n\t\t\tawait this.fetchCollection(\n\t\t\t\tthis.albumFileName,\n\t\t\t\t['<nc:location />', '<nc:dateRange />', '<nc:collaborators />'],\n\t\t\t)\n\t\t},\n\n\t\tasync fetchAlbumContent() {\n\t\t\tawait this.fetchCollectionFiles(this.albumFileName)\n\t\t},\n\n\t\tasync handleFilesPicked(fileIds) {\n\t\t\tthis.showAddPhotosModal = false\n\t\t\tawait this.addFilesToCollection({ collectionFileName: this.album.filename, fileIdsToAdd: fileIds })\n\t\t\t// Re-fetch album content to have the proper filenames.\n\t\t\tawait this.fetchAlbumContent()\n\t\t},\n\n\t\tasync handleRemoveFilesFromAlbum(fileIds) {\n\t\t\tthis.$refs.collectionContent.onUncheckFiles(fileIds)\n\t\t\tawait this.removeFilesFromCollection({ collectionFileName: this.album.filename, fileIdsToRemove: fileIds })\n\t\t},\n\n\t\tasync handleDeleteAlbum() {\n\t\t\tawait this.deleteCollection({ collectionFileName: this.album.filename })\n\t\t\tthis.$router.push('/sharedalbums')\n\t\t},\n\n\t\tt: translate,\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n.album {\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t&__title {\n\t\twidth: 100%;\n\t}\n\n\t&__name {\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\t&__location {\n\t\tmargin-left: -4px;\n\t\tdisplay: flex;\n\t\tcolor: var(--color-text-lighter);\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<div>\n\t\t<CollectionContent ref=\"collectionContent\"\n\t\t\t:collection=\"album\"\n\t\t\t:collection-file-ids=\"albumFileIds\"\n\t\t\t:allow-selection=\"false\"\n\t\t\t:loading=\"loadingCollection || loadingCollectionFiles\"\n\t\t\t:error=\"errorFetchingCollection || errorFetchingCollectionFiles\">\n\t\t\t<!-- Header -->\n\t\t\t<HeaderNavigation v-if=\"albumOriginalName !== ''\"\n\t\t\t\tkey=\"navigation\"\n\t\t\t\tslot=\"header\"\n\t\t\t\tslot-scope=\"{selectedFileIds}\"\n\t\t\t\t:loading=\"loadingCollection || loadingCollectionFiles\"\n\t\t\t\t:params=\"{ token }\"\n\t\t\t\tpath=\"/\"\n\t\t\t\t:root-title=\"albumOriginalName\"\n\t\t\t\t:title=\"albumOriginalName\"\n\t\t\t\t@refresh=\"fetchAlbumContent\">\n\t\t\t\t<div v-if=\"album.location !== ''\" slot=\"subtitle\" class=\"album__location\">\n\t\t\t\t\t<MapMarker />{{ album.location }}\n\t\t\t\t</div>\n\t\t\t\t<template v-if=\"album !== undefined\" slot=\"right\">\n\t\t\t\t\t<NcActions :force-menu=\"true\" :aria-label=\"t('photos', 'Open actions menu')\">\n\t\t\t\t\t\t<!-- TODO: enable download on public albums -->\n\t\t\t\t\t\t<!-- <ActionDownload v-if=\"albumFileIds.length > 0\"\n\t\t\t\t\t\t\t:selected-file-ids=\"albumFileIds\"\n\t\t\t\t\t\t\t:title=\"t('photos', 'Download all files in album')\">\n\t\t\t\t\t\t\t<DownloadMultiple slot=\"icon\" />\n\t\t\t\t\t\t</ActionDownload> -->\n\n\t\t\t\t\t\t<template v-if=\"selectedFileIds.length > 0\">\n\t\t\t\t\t\t\t<!-- TODO: enable download on public albums -->\n\t\t\t\t\t\t\t<!-- <NcActionSeparator />\n\n\t\t\t\t\t\t\t<ActionDownload :selected-file-ids=\"selectedFileIds\" :title=\"t('photos', 'Download selected files')\">\n\t\t\t\t\t\t\t\t<Download slot=\"icon\" />\n\t\t\t\t\t\t\t</ActionDownload> -->\n\n\t\t\t\t\t\t\t<!-- </**  :close */-after-click=\"true\"\n\t\t\t\t\t\t\t\t@click=\"handleRemoveFilesFromAlbum(selectedFileIds)\">\n\t\t\t\t\t\t\t\t{{ t('photos', 'Remove selection from album') }}\n\t\t\t\t\t\t\t\t<Close slot=\"icon\" />\n\t\t\t\t\t\t\t<//** > */ -->\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</NcActions>\n\t\t\t\t</template>\n\t\t\t</HeaderNavigation>\n\n\t\t\t<!-- No content -->\n\t\t\t<NcEmptyContent slot=\"empty-content\"\n\t\t\t\t:name=\"t('photos', 'This album does not have any photos or videos yet!')\"\n\t\t\t\tclass=\"album__empty\">\n\t\t\t\t<ImageOff slot=\"icon\" />\n\n\t\t\t\t<!-- Public upload is not implemented yet\n\t\t\t\t<NcButton slot=\"action\"\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t:aria-label=\"t('photos', 'Add photos to this album')\"\n\t\t\t\t\t@click=\"showAddPhotosModal = true\">\n\t\t\t\t\t<Plus slot=\"icon\" />\n\t\t\t\t\t{{ t('photos', \"Add\") }}\n\t\t\t\t</NcButton>\n\t\t\t\t-->\n\t\t\t</NcEmptyContent>\n\t\t</CollectionContent>\n\t</div>\n</template>\n\n<script lang='ts'>\nimport { mapActions } from 'vuex'\n\nimport MapMarker from 'vue-material-design-icons/MapMarker.vue'\n// import Plus from 'vue-material-design-icons/Plus.vue'\n// import ImagePlus from 'vue-material-design-icons/ImagePlus.vue'\nimport ImageOff from 'vue-material-design-icons/ImageOff.vue'\n// import Download from 'vue-material-design-icons/Download.vue'\n// import DownloadMultiple from 'vue-material-design-icons/DownloadMultiple.vue'\n\nimport { NcActions, /** NcButton, */ NcEmptyContent, /** NcActionSeparator, */ isMobile } from '@nextcloud/vue'\nimport { generateRemoteUrl, generateUrl } from '@nextcloud/router'\nimport { translate } from '@nextcloud/l10n'\n\nimport CollectionContent from '../components/Collection/CollectionContent.vue'\nimport HeaderNavigation from '../components/HeaderNavigation.vue'\n// import ActionDownload from '../components/Actions/ActionDownload.vue'\nimport FetchCollectionContentMixin from '../mixins/FetchCollectionContentMixin.js'\nimport { getClient } from '@nextcloud/files/dav'\nimport type { PublicAlbum } from '../store/publicAlbums.js'\n\nexport default {\n\tname: 'PublicAlbumContent',\n\tcomponents: {\n\t\tMapMarker,\n\t\t// Plus,\n\t\t// Download,\n\t\t// DownloadMultiple,\n\t\t// ImagePlus,\n\t\tImageOff,\n\t\tNcEmptyContent,\n\t\tNcActions,\n\t\t// NcActionSeparator,\n\t\t// NcButton,\n\t\tCollectionContent,\n\t\t// ActionDownload,\n\t\tHeaderNavigation,\n\t},\n\n\tmixins: [\n\t\tFetchCollectionContentMixin,\n\t\tisMobile,\n\t],\n\n\tprops: {\n\t\ttoken: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tshowAddPhotosModal: false,\n\t\t\tloadingCount: 0,\n\t\t\tloadingAddFilesToAlbum: false,\n\t\t\talbumOriginalName: '',\n\t\t\tpublicClient: getClient(generateRemoteUrl('dav'), {\n\t\t\t\tAuthorization: `Basic ${btoa(`${this.token}:`)}`,\n\t\t\t}),\n\t\t}\n\t},\n\n\tcomputed: {\n\t\talbum(): PublicAlbum {\n\t\t\treturn this.$store.getters.getPublicAlbum(this.albumName)\n\t\t},\n\n\t\talbumName(): string {\n\t\t\treturn this.token\n\t\t},\n\n\t\talbumFileIds(): string[] {\n\t\t\treturn this.$store.getters.getPublicAlbumFiles(this.albumName)\n\t\t},\n\n\t\tpublicAlbumFileName(): string {\n\t\t\treturn this.$store.getters.getPublicAlbumName(this.albumName)\n\t\t},\n\t},\n\n\tasync beforeMount() {\n\t\tawait this.fetchAlbumInfo()\n\t\tawait this.fetchAlbumContent()\n\t},\n\n\tmethods: {\n\t\t...mapActions([\n\t\t\t'appendFiles',\n\t\t\t'addCollection',\n\t\t\t'addFilesToCollection',\n\t\t\t'removeFilesFromCollection',\n\t\t]),\n\n\t\tasync fetchAlbumInfo() {\n\t\t\tconst album = await this.fetchCollection(\n\t\t\t\t`/photospublic/${this.token}`,\n\t\t\t\t['<nc:location />', '<nc:dateRange />', '<nc:collaborators />', '<nc:original-name />'],\n\t\t\t\tthis.publicClient,\n\t\t\t)\n\n\t\t\tthis.albumOriginalName = album.originalName\n\t\t},\n\n\t\tasync fetchAlbumContent() {\n\t\t\tawait this.fetchCollectionFiles(\n\t\t\t\t`/photospublic/${this.token}`,\n\t\t\t\t['<nc:location />', '<nc:dateRange />', '<nc:collaborators />', '<nc:original-name />'],\n\t\t\t\tthis.publicClient,\n\t\t\t\t[\n\t\t\t\t\tfile => ({\n\t\t\t\t\t\t...file,\n\t\t\t\t\t\t// Use custom preview URL to avoid authentication prompt\n\t\t\t\t\t\tpreviewUrl: generateUrl(`/apps/photos/api/v1/publicPreview/${file.fileid}?x=2048&y=2048&token=${this.token}`),\n\t\t\t\t\t\t// Disable use of generic file previews for public albums - for older versions of the Viewer app\n\t\t\t\t\t\thasPreview: false,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t)\n\t\t},\n\n\t\tasync handleFilesPicked(fileIds) {\n\t\t\tthis.showAddPhotosModal = false\n\t\t\tawait this.addFilesToCollection({ collectionFileName: this.albumName, fileIdsToAdd: fileIds })\n\t\t\t// Re-fetch album content to have the proper filenames.\n\t\t\tawait this.fetchAlbumContent()\n\t\t},\n\n\t\tasync handleRemoveFilesFromAlbum(fileIds) {\n\t\t\tthis.$refs.collectionContent.onUncheckFiles(fileIds)\n\t\t\tawait this.removeFilesFromCollection({ collectionFileName: this.albumName, fileIdsToRemove: fileIds })\n\t\t},\n\n\t\tt: translate,\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n.album {\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t&__title {\n\t\twidth: 100%;\n\t}\n\n\t&__name {\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\t&__location {\n\t\tmargin-left: -4px;\n\t\tdisplay: flex;\n\t\tcolor: var(--color-text-lighter);\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<div v-if=\"!showAlbumCreationForm\" class=\"album-picker\">\n\t\t<h2>\n\t\t\t{{ t('photos', 'Add to Album') }}\n\t\t\t<NcLoadingIcon v-if=\"loadingCollections\" class=\"loading-icon\" />\n\t\t</h2>\n\n\t\t<ul class=\"albums-container\">\n\t\t\t<NcListItem v-for=\"album in allAlbums\"\n\t\t\t\t:key=\"album.filename\"\n\t\t\t\tclass=\"album\"\n\t\t\t\t:name=\"originalName(album)\"\n\t\t\t\t:aria-label=\"t('photos', 'Add selection to album {albumName}', {albumName: album.basename})\"\n\t\t\t\t@click=\"pickAlbum(album)\">\n\t\t\t\t<template slot=\"icon\">\n\t\t\t\t\t<img v-if=\"album.lastPhoto !== -1\" class=\"album__image\" :src=\"album.lastPhoto | toCoverUrl\">\n\t\t\t\t\t<div v-else class=\"album__image album__image--placeholder\">\n\t\t\t\t\t\t<ImageMultiple :size=\"32\" />\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\n\t\t\t\t<template #subname>\n\t\t\t\t\t{{ n('photos', '%n item', '%n photos and videos', album.nbItems) }}\n\t\t\t\t\t<template v-if=\"isSharedAlbum(album)\">\n\t\t\t\t\t\t⸱ {{ t('photos', 'Shared by') }}&nbsp;<NcUserBubble :display-name=\"album.collaborators[0].label\" :user=\"album.collaborators[0].id\" />\n\t\t\t\t\t</template>\n\t\t\t\t</template>\n\t\t\t</NcListItem>\n\t\t</ul>\n\n\t\t<NcButton :aria-label=\"t('photos', 'Create a new album.')\"\n\t\t\tclass=\"new-album-button\"\n\t\t\ttype=\"tertiary\"\n\t\t\t@click=\"showAlbumCreationForm = true\">\n\t\t\t<template #icon>\n\t\t\t\t<Plus />\n\t\t\t</template>\n\t\t\t{{ t('photos', 'Create new album') }}\n\t\t</NcButton>\n\t</div>\n\n\t<AlbumForm v-else\n\t\t:display-back-button=\"true\"\n\t\t:title=\"t('photos', 'New album')\"\n\t\t@back=\"showAlbumCreationForm = false\"\n\t\t@done=\"albumCreatedHandler\" />\n</template>\n\n<script lang='ts'>\nimport { mapGetters } from 'vuex'\nimport Plus from 'vue-material-design-icons/Plus.vue'\nimport ImageMultiple from 'vue-material-design-icons/ImageMultiple.vue'\n\nimport { NcButton, NcListItem, NcLoadingIcon, NcUserBubble } from '@nextcloud/vue'\nimport { generateUrl } from '@nextcloud/router'\nimport { translate, translatePlural } from '@nextcloud/l10n'\nimport { getCurrentUser } from '@nextcloud/auth'\n\nimport FetchCollectionsMixin from '../../mixins/FetchCollectionsMixin.js'\nimport AlbumForm from './AlbumForm.vue'\nimport type { Album } from '../../store/albums.js'\n\nexport default {\n\tname: 'AlbumPicker',\n\n\tcomponents: {\n\t\tPlus,\n\t\tImageMultiple,\n\t\tNcButton,\n\t\tNcListItem,\n\t\tNcLoadingIcon,\n\t\tNcUserBubble,\n\t\tAlbumForm,\n\t},\n\n\tfilters: {\n\t\ttoCoverUrl(fileId: string): string {\n\t\t\treturn generateUrl(`/apps/photos/api/v1/preview/${fileId}?x=${64}&y=${64}`)\n\t\t},\n\t},\n\n\tmixins: [\n\t\tFetchCollectionsMixin,\n\t],\n\n\tdata() {\n\t\treturn {\n\t\t\tshowAlbumCreationForm: false,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'albums',\n\t\t\t'sharedAlbums',\n\t\t]),\n\n\t\tallAlbums(): Album[] {\n\t\t\treturn [...Object.values(this.albums), ...Object.values(this.sharedAlbums)]\n\t\t},\n\t},\n\n\tmounted() {\n\t\tthis.fetchAlbumList()\n\t},\n\n\tmethods: {\n\t\tasync fetchAlbumList() {\n\t\t\tawait this.fetchCollections(`/photos/${getCurrentUser()?.uid}/albums`, ['<nc:location />', '<nc:dateRange />', '<nc:collaborators />'])\n\t\t\tawait this.fetchCollections(`/photos/${getCurrentUser()?.uid}/sharedalbums`, ['<nc:location />', '<nc:dateRange />', '<nc:collaborators />'])\n\t\t},\n\n\t\talbumCreatedHandler() {\n\t\t\tthis.showAlbumCreationForm = false\n\t\t\tthis.fetchAlbumList()\n\t\t},\n\n\t\tpickAlbum(album: Album) {\n\t\t\tthis.$emit('album-picked', album)\n\t\t},\n\n\t\tisSharedAlbum(album: Album): boolean {\n\t\t\treturn album.filename.match(/^\\/photos\\/.+\\/sharedalbums\\//) !== null\n\t\t},\n\n\t\toriginalName(album: Album): string {\n\t\t\tif (this.isSharedAlbum(album)) {\n\t\t\t\treturn album.basename.replace(new RegExp(`\\\\(${album.collaborators[0].id}\\\\)$`), '')\n\t\t\t} else {\n\t\t\t\treturn album.basename\n\t\t\t}\n\t\t},\n\n\t\tt: translate,\n\t\tn: translatePlural,\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.album-picker {\n\tpadding: 32px;\n\tpadding-top: 16px;\n\n\th2 {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\theight: 60px;\n\n\t\t.loading-icon {\n\t\t\tmargin-left: 32px;\n\t\t}\n\t}\n\n\t.albums-container {\n\t\tmin-height: 150px;\n\t\tmax-height: 350px;\n\t\toverflow-x: scroll;\n\t\tpadding: 2px;\n\n\t\t.album {\n\n\t\t\t:deep(.list-item) {\n\t\t\t\tpadding: 8px 16px;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\t&:not(:last-child) {\n\t\t\t\tmargin-bottom: 16px;\n\t\t\t}\n\n\t\t\t&__image {\n\t\t\t\twidth: 40px;\n\t\t\t\theight: 40px;\n\t\t\t\tobject-fit: none;\n\t\t\t\tborder-radius: var(--border-radius);\n\n\t\t\t\t&--placeholder {\n\t\t\t\t\tbackground: var(--color-primary-element-light);\n\n\t\t\t\t\t:deep(.material-design-icon) {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\theight: 100%;\n\n\t\t\t\t\t\t.material-design-icon__svg {\n\t\t\t\t\t\t\tfill: var(--color-primary-element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.new-album-button {\n\t\tmargin-top: 32px;\n\t}\n}\n</style>\n"],"names":["albumsPrefix","getCurrentUser","getters","_","__","___","rootGetters","rootState","albumName","albums","publicAlbumsPrefix","publicAlbumName","publicAlbums","sharedAlbumsPrefix","sharedAlbumName","sharedAlbums","getAlbumContent","path","options","endpoint","generateUrl","prefix","list","axios","encodeFilePath","data","genFileInfo","folder","folders","files","entry","allowedMimes","_sfc_main$7","Close","AccountGroup","ContentCopy","Check","Earth","NcButton","NcListItemIcon","NcSelect","FetchCollectionContentMixin","ShareType","id","collaborator","AccountGroupSvg","key","collaboratorKey","collaborators","mapActions","query","response","generateOcsUrl","error","logger","showError","initialCollaborators","index","translate","_sfc_main$6","MapMarker","AccountMultiplePlus","Send","NcLoadingIcon","NcTextField","CollaboratorsSelectionForm","album","moment","generateRemoteUrl","_sfc_main$5","Plus","FolderMultipleImage","NcModal","NcEmptyContent","CollectionsList","CollectionCover","HeaderNavigation","AlbumForm","lastPhoto","FetchCollectionsMixin","useIsSmallMobile","translatePlural","_sfc_main$4","ActionFavorite","CollectionContent","Delete","PhotosPicker","ImagePlus","NcActionButton","NcActions","NcActionSeparator","NcDialog","Pencil","ShareVariant","FetchFilesMixin","isMobile","fileIds","_sfc_main$3","NcUserBubble","_sfc_main$2","Type","mapGetters","_sfc_main$1","ImageOff","getClient","file","_sfc_main","ImageMultiple","NcListItem","fileId"],"mappings":"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"}