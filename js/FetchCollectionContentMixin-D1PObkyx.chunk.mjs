import{d as C,t as n}from"./vue.runtime.esm-DZVHDHac.chunk.mjs";import{m as r,B as s,l as c,S as g}from"./index-CtBKWcPT.chunk.mjs";import{A as F}from"./AbortControllerMixin-BHckU111.chunk.mjs";import{a as f,b as d}from"./collectionFetcher-CZgqdVWX.chunk.mjs";const b=C({name:"FetchCollectionContentMixin",data(){return{fetchSemaphore:new g(1),loadingCollection:!1,loadingCollectionFiles:!1,errorFetchingCollection:null,errorFetchingCollectionFiles:null}},mixins:[F],methods:{async fetchCollection(e,l,i){if(this.loadingCollection)return null;try{this.loadingCollection=!0,this.errorFetchingCollection=null;const t=await d(e,{signal:this.abortController.signal},l,i);return this.$store.dispatch("addCollections",{collections:[t]}),t}catch(t){if(r(t)&&t.response?.status===404)return this.errorFetchingCollection=404,null;this.errorFetchingCollection=t,c.error("[PublicCollectionContent] Error fetching collection",{error:t}),s(n("photos","Failed to fetch collection."))}finally{this.loadingCollection=!1}return null},async fetchCollectionFiles(e,l,i){if(this.loadingCollectionFiles)return[];const t=await this.fetchSemaphore.acquire();try{this.errorFetchingCollectionFiles=null,this.loadingCollectionFiles=!0;const o=await f(e,{signal:this.abortController.signal},l,i),a=o.map(h=>h.fileid?.toString());return this.$store.dispatch("appendFiles",o),o.length>0&&await this.$store.commit("setCollectionFiles",{collectionFileName:e,fileIds:a}),o}catch(o){if(r(o)&&o.response?.status===404)return this.errorFetchingCollectionFiles=404,[];this.errorFetchingCollectionFiles=o,s(n("photos","Failed to fetch collections list.")),c.error("[PublicCollectionContent] Error fetching collection files",{error:o})}finally{this.loadingCollectionFiles=!1,this.fetchSemaphore.release(t)}return[]}}});export{b as F};
//# sourceMappingURL=FetchCollectionContentMixin-D1PObkyx.chunk.mjs.map
