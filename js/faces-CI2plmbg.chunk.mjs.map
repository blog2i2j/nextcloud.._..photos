{"version":3,"file":"faces-CI2plmbg.chunk.mjs","sources":["../src/store/faces.ts","../src/mixins/FetchFacesMixin.ts","../src/mixins/FaceCoverMixin.ts","../src/components/Faces/FaceCover.vue","../src/components/Faces/UnassignedFacesCover.vue","../src/views/Faces.vue","../src/components/Faces/FaceMergeForm.vue","../src/views/FaceContent.vue","../src/views/UnassignedFaces.vue"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { showError } from '@nextcloud/dialogs'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { t } from '@nextcloud/l10n'\nimport Vue from 'vue'\n\nimport { davClient } from '../services/DavClient.ts'\nimport logger from '../services/logger.js'\nimport Semaphore from '../utils/semaphoreWithPriority.js'\n\ntype Face = {\n\tbasename: string // The name of the face.\n\tlastmod: number // The creation date of the face.\n\tsize: string // The number of items in the face.\n}\n\nconst state = {\n\tfaces: {} as Record<string, Face>,\n\tfacesFiles: {} as Record<string, string[]>,\n\tunassignedFiles: [] as string[],\n\tunassignedFilesCount: 0,\n}\n\ntype FaceState = typeof state\n\nconst mutations = {\n\t/**\n\t * Add faces to the face collection.\n\t */\n\taddFaces(state: FaceState, { faces }: { faces: Face[] }) {\n\t\tfor (const face of faces) {\n\t\t\tVue.set(state.faces, face.basename, face)\n\t\t}\n\t},\n\n\t/**\n\t * Remove faces from the face collection.\n\t */\n\tremoveFaces(state: FaceState, { faceNames }: { faceNames: string[] }) {\n\t\tfaceNames.forEach(faceName => Vue.delete(state.faces, faceName))\n\t\tfaceNames.forEach(faceName => Vue.delete(state.facesFiles, faceName))\n\t},\n\n\t/**\n\t * Add files to a face.\n\t */\n\taddFilesToFace(state: FaceState, { faceName, fileIdsToAdd }: { faceName: string, fileIdsToAdd: string[] }) {\n\t\tif (!state.facesFiles[faceName]) {\n\t\t\tVue.set(state.facesFiles, faceName, [])\n\t\t}\n\t\tconst faceFiles = state.facesFiles[faceName]\n\t\tfaceFiles.push(...fileIdsToAdd.filter(fileId => !faceFiles.includes(fileId))) // Filter to prevent duplicate fileId.\n\t},\n\n\t/**\n\t * Add files to a face.\n\t */\n\taddUnassignedFiles(state: FaceState, { fileIdsToAdd }: { fileIdsToAdd: string[] }) {\n\t\tif (!state.unassignedFiles) {\n\t\t\tstate.unassignedFiles = []\n\t\t}\n\t\tconst files = state.unassignedFiles\n\t\tfiles.push(...fileIdsToAdd.filter(fileId => !files.includes(fileId))) // Filter to prevent duplicate fileId.\n\t},\n\n\t/**\n\t * Remove files from the unassigned Files collection\n\t */\n\tremoveUnassignedFile(state: FaceState, { fileIdsToRemove }: { fileIdsToRemove: string[] }) {\n\t\tstate.unassignedFiles = state.unassignedFiles.filter(fileId => !fileIdsToRemove.includes(fileId))\n\t},\n\n\t/**\n\t * Remove files from a face.\n\t */\n\tremoveFilesFromFace(state: FaceState, { faceName, fileIdsToRemove }: { faceName: string, fileIdsToRemove: string[] }) {\n\t\tVue.set(state.facesFiles, faceName, state.facesFiles[faceName].filter(fileId => !fileIdsToRemove.includes(fileId)))\n\t},\n\n\tsetUnassignedFilesCount(state: FaceState, count: number) {\n\t\tstate.unassignedFilesCount = count\n\t},\n}\n\nconst getters = {\n\tfaces: (state: FaceState) => state.faces,\n\tfacesFiles: (state: FaceState) => state.facesFiles,\n\tunassignedFiles: (state: FaceState) => state.unassignedFiles,\n\tunassignedFilesCount: (state: FaceState) => state.unassignedFilesCount,\n}\n\nconst actions = {\n\t/**\n\t * Update files and faces\n\t */\n\taddFaces(context, { faces }: { faces: Face[] }) {\n\t\tcontext.commit('addFaces', { faces })\n\t},\n\n\t/**\n\t * Add files to a face.\n\t */\n\tasync moveFilesToFace(context, { oldFace, faceName, fileIdsToMove }: { oldFace?: string, faceName: string, fileIdsToMove: string[] }) {\n\t\tconst semaphore = new Semaphore(5)\n\n\t\tconst promises = fileIdsToMove\n\t\t\t.map(async (fileId) => {\n\t\t\t\tconst file = context.getters.files[fileId]\n\t\t\t\tconst fileBaseName = file.basename\n\t\t\t\tconst symbol = await semaphore.acquire()\n\n\t\t\t\ttry {\n\t\t\t\t\tawait davClient.moveFile(\n\t\t\t\t\t\toldFace ? `/recognize/${getCurrentUser()?.uid}/faces/${oldFace}/${fileBaseName}` : `/recognize/${getCurrentUser()?.uid}/unassigned-faces/${fileBaseName}`,\n\t\t\t\t\t\t`/recognize/${getCurrentUser()?.uid}/faces/${faceName}/${fileBaseName}`,\n\t\t\t\t\t)\n\t\t\t\t\tfile.faceDetections.find(detection => detection.title === oldFace).title = faceName\n\t\t\t\t\tawait context.commit('addFilesToFace', { faceName, fileIdsToAdd: [fileId] })\n\t\t\t\t\tif (oldFace) {\n\t\t\t\t\t\tawait context.commit('removeFilesFromFace', { faceName: oldFace, fileIdsToRemove: [fileId] })\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait context.commit('removeUnassignedFile', { fileIdsToRemove: [fileId] })\n\t\t\t\t\t}\n\t\t\t\t\tsemaphore.release(symbol)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tlogger.error(t('photos', 'Failed to move {fileBaseName} to person {faceName}', { fileBaseName, faceName }), { error })\n\t\t\t\t\tshowError(t('photos', 'Failed to move {fileBaseName} to person {faceName}', { fileBaseName, faceName }))\n\t\t\t\t\tsemaphore.release(symbol)\n\t\t\t\t\tthrow error\n\t\t\t\t}\n\t\t\t})\n\n\t\treturn Promise.all(promises)\n\t},\n\n\t/**\n\t * Remove files to an face.\n\t */\n\tasync removeFilesFromFace(context, { faceName, fileIdsToRemove }: { faceName: string, fileIdsToRemove: string[] }) {\n\t\tconst semaphore = new Semaphore(5)\n\n\t\tawait context.commit('removeFilesFromFace', { faceName, fileIdsToRemove })\n\n\t\tconst promises = fileIdsToRemove\n\t\t\t.map(async (fileId) => {\n\t\t\t\tconst fileBaseName = context.getters.files[fileId].basename\n\t\t\t\tconst symbol = await semaphore.acquire()\n\n\t\t\t\ttry {\n\t\t\t\t\tawait davClient.deleteFile(`/recognize/${getCurrentUser()?.uid}/faces/${faceName}/${fileBaseName}`)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcontext.commit('addFilesToFace', { faceName, fileIdsToAdd: [fileId] })\n\n\t\t\t\t\tlogger.error(t('photos', 'Failed to remove {fileBaseName}', { fileBaseName }), { error })\n\t\t\t\t\tshowError(t('photos', 'Failed to remove {fileBaseName}', { fileBaseName }))\n\t\t\t\t} finally {\n\t\t\t\t\tsemaphore.release(symbol)\n\t\t\t\t}\n\t\t\t})\n\n\t\treturn Promise.all(promises)\n\t},\n\n\t/**\n\t * Rename an face.\n\t */\n\tasync renameFace(context, { oldName, faceName }: { oldName: string, faceName: string }) {\n\t\tlet face = state.faces[oldName]\n\n\t\ttry {\n\t\t\tif (state.faces[faceName]) {\n\t\t\t\tthrow new Error('Name already exists')\n\t\t\t}\n\t\t\tawait davClient.moveFile(\n\t\t\t\t`/recognize/${getCurrentUser()?.uid}/faces/${oldName}`,\n\t\t\t\t`/recognize/${getCurrentUser()?.uid}/faces/${faceName}`,\n\t\t\t)\n\t\t\tcontext.commit('removeFaces', { faceNames: [oldName] })\n\t\t\tface = { ...face, basename: faceName }\n\t\t\tcontext.commit('addFaces', { faces: [face] })\n\t\t} catch (error) {\n\t\t\tlogger.error(t('photos', 'Failed to rename {oldName} to {faceName}', { oldName, faceName }), { error })\n\t\t\tshowError(t('photos', 'Failed to rename {oldName} to {faceName}', { oldName, faceName }))\n\t\t\tthrow error\n\t\t}\n\t},\n\n\t/**\n\t * Delete an face.\n\t */\n\tasync deleteFace(context, { faceName }: { faceName: string}) {\n\t\ttry {\n\t\t\tawait davClient.deleteFile(`/recognize/${getCurrentUser()?.uid}/faces/${faceName}`)\n\t\t\tcontext.commit('removeFaces', { faceNames: [faceName] })\n\t\t} catch (error) {\n\t\t\tlogger.error(t('photos', 'Failed to delete {faceName}', { faceName }), { error })\n\t\t\tshowError(t('photos', 'Failed to delete {faceName}', { faceName }))\n\t\t}\n\t},\n}\n\nexport default { state, mutations, getters, actions }\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { showError } from '@nextcloud/dialogs'\nimport { translate as t } from '@nextcloud/l10n'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { mapActions, mapGetters } from 'vuex'\nimport he from 'he'\nimport type { FileStat, ResponseDataDetailed } from 'webdav'\n\nimport { genFileInfo, type PhotoNode } from '../utils/fileUtils.js'\nimport logger from '../services/logger.js'\nimport AbortControllerMixin from './AbortControllerMixin.js'\nimport { davClient } from '../services/DavClient.ts'\nimport { getPropFind } from '../services/DavRequest.ts'\n\nconst recognizeDAVProps = [\n\t'nc:face-detections',\n\t'nc:face-preview-image',\n\t'nc:realpath',\n]\n\ntype FaceNode = PhotoNode & {\n\tfaceDetections: string\n\tfacePreviewImage: string\n\trealpath: string\n}\n\nexport default {\n\tname: 'FetchFacesMixin',\n\n\tdata() {\n\t\treturn {\n\t\t\terrorFetchingFaces: null,\n\t\t\tloadingFaces: false,\n\t\t\terrorFetchingFiles: null,\n\t\t\tloadingFiles: false,\n\t\t}\n\t},\n\n\tmixins: [\n\t\tAbortControllerMixin,\n\t],\n\n\tasync beforeMount() {\n\t\tthis.fetchFaces()\n\t},\n\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'faces',\n\t\t]),\n\t},\n\n\tmethods: {\n\t\t...mapActions([\n\t\t\t'appendFiles',\n\t\t]),\n\n\t\tasync fetchFaces() {\n\t\t\tif (this.loadingFaces) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (Object.keys(this.faces).length) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.loadingFaces = true\n\t\t\t\tthis.errorFetchingFaces = null\n\n\t\t\t\tconst { data: faces } = await davClient.getDirectoryContents(`/recognize/${getCurrentUser()?.uid}/faces/`, {\n\t\t\t\t\tdata: getPropFind(recognizeDAVProps),\n\t\t\t\t\tdetails: true,\n\t\t\t\t\tsignal: this.abortController.signal,\n\t\t\t\t}) as ResponseDataDetailed<FileStat[]>\n\t\t\t\tthis.$store.dispatch('addFaces', { faces })\n\t\t\t\tlogger.debug(`[FetchFacesMixin] Fetched ${faces.length} new faces: `, {faces})\n\t\t\t} catch (error) {\n\t\t\t\tif (error.response && error.response.status) {\n\t\t\t\t\tif (error.response.status === 404) {\n\t\t\t\t\t\tthis.errorFetchingFaces = 404\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.errorFetchingFaces = error\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlogger.error(t('photos', 'Failed to fetch faces list.'), { error })\n\t\t\t\tshowError(t('photos', 'Failed to fetch faces list.'))\n\t\t\t} finally {\n\t\t\t\tthis.loadingFaces = false\n\t\t\t}\n\t\t},\n\n\t\tasync fetchFaceContent(faceName, force) {\n\t\t\tif (this.loadingFiles) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (!force && this.facesFiles[faceName] && this.facesFiles[faceName].length) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.errorFetchingFiles = null\n\t\t\t\tthis.loadingFiles = true\n\n\t\t\t\tconst { data: fetchedRawFiles } = await davClient.getDirectoryContents(\n\t\t\t\t\t`/recognize/${getCurrentUser()?.uid}/faces/${faceName}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: getPropFind(recognizeDAVProps),\n\t\t\t\t\t\tdetails: true,\n\t\t\t\t\t\tsignal: this.abortController.signal,\n\t\t\t\t\t},\n\t\t\t\t) as ResponseDataDetailed<FileStat[]>\n\n\t\t\t\tconst fetchedFiles = fetchedRawFiles\n\t\t\t\t\t.map(file => genFileInfo(file) as FaceNode)\n\t\t\t\t\t.map(file => ({ ...file, filename: he.decode(file.realpath).replace(`/${getCurrentUser()?.uid}/files`, `/files/${getCurrentUser()?.uid}`) }))\n\t\t\t\t\t.map(file => ({ ...file, faceDetections: JSON.parse(he.decode(file.faceDetections)) }))\n\n\t\t\t\tconst fileIds = fetchedFiles.map(file => '' + file.fileid)\n\n\t\t\t\tthis.appendFiles(fetchedFiles)\n\n\t\t\t\tif (fetchedFiles.length > 0) {\n\t\t\t\t\tawait this.$store.commit('addFilesToFace', { faceName, fileIdsToAdd: fileIds })\n\t\t\t\t}\n\n\t\t\t\tlogger.debug(`[FetchFacesMixin] Fetched ${fileIds.length} new files: `, { fileIds })\n\t\t\t} catch (error) {\n\t\t\t\tif (error.response && error.response.status) {\n\t\t\t\t\tif (error.response.status === 404) {\n\t\t\t\t\t\tthis.errorFetchingFiles = 404\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.errorFetchingFiles = error\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// cancelled request, moving on...\n\t\t\t\tlogger.error('Error fetching face files', { error })\n\t\t\t} finally {\n\t\t\t\tthis.loadingFiles = false\n\t\t\t}\n\t\t},\n\n\t\tasync fetchUnassignedFaces(force) {\n\t\t\tif (this.loadingFiles) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (!force && this.unassignedFiles && this.unassignedFiles.length) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.errorFetchingFiles = null\n\t\t\t\tthis.loadingFiles = true\n\n\t\t\t\tconst { data: fetchedRawFiles } = await davClient.getDirectoryContents(\n\t\t\t\t\t`/recognize/${getCurrentUser()?.uid}/unassigned-faces`,\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: getPropFind(recognizeDAVProps),\n\t\t\t\t\t\tdetails: true,\n\t\t\t\t\t\tsignal: this.abortController.signal,\n\t\t\t\t\t},\n\t\t\t\t) as ResponseDataDetailed<FileStat[]>\n\n\t\t\t\tconst fetchedFiles = fetchedRawFiles\n\t\t\t\t\t.map(file => genFileInfo(file) as FaceNode)\n\t\t\t\t\t.map(file => ({ ...file, filename: he.decode(file.realpath).replace(`/${getCurrentUser()?.uid}/files`, `/files/${getCurrentUser()?.uid}`) }))\n\t\t\t\t\t.map(file => ({ ...file, faceDetections: JSON.parse(he.decode(file.faceDetections)) }))\n\n\t\t\t\tconst fileIds = fetchedFiles.map(file => '' + file.fileid)\n\n\t\t\t\tthis.appendFiles(fetchedFiles)\n\n\t\t\t\tif (fetchedFiles.length > 0) {\n\t\t\t\t\tawait this.$store.commit('addUnassignedFiles', { fileIdsToAdd: fileIds })\n\t\t\t\t}\n\n\t\t\t\tlogger.debug(`[FetchFacesMixin] Fetched ${fileIds.length} new unassigned files: `, { fileIds })\n\t\t\t} catch (error) {\n\t\t\t\tif (error.response && error.response.status) {\n\t\t\t\t\tif (error.response.status === 404) {\n\t\t\t\t\t\tthis.errorFetchingFiles = 404\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.errorFetchingFiles = error\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// cancelled request, moving on...\n\t\t\t\tlogger.error('Error fetching unassigned files', { error })\n\t\t\t} finally {\n\t\t\t\tthis.loadingFiles = false\n\t\t\t}\n\t\t},\n\n\t\tasync fetchUnassignedFacesCount() {\n\t\t\ttry {\n\t\t\t\tconst { data: unassignedFacesRoot } = await davClient.stat(\n\t\t\t\t\t`/recognize/${getCurrentUser()?.uid}/unassigned-faces`,\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: getPropFind(recognizeDAVProps),\n\t\t\t\t\t\tdetails: true,\n\t\t\t\t\t\tsignal: this.abortController.signal,\n\t\t\t\t\t},\n\t\t\t\t) as ResponseDataDetailed<FileStat>\n\n\t\t\t\tconst count = Number(unassignedFacesRoot.props?.nbItems)\n\n\t\t\t\tawait this.$store.commit('setUnassignedFilesCount', count)\n\n\t\t\t\tlogger.debug('[FetchFacesMixin] Fetched unassigned files count: ', { count })\n\t\t\t} catch (error) {\n\t\t\t\t// cancelled request, moving on...\n\t\t\t\tlogger.error('Error fetching unassigned files count', { error })\n\t\t\t}\n\t\t},\n\t},\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { mapGetters } from 'vuex'\nimport he from 'he'\nimport type { PhotoNode } from '../utils/fileUtils'\nimport type { Collection } from '../services/collectionFetcher'\nimport type { ComponentOptions } from 'vue'\n\ntype Cover = {\n\tdetection: {\n\t\tx: number\n\t\ty: number\n\t\twidth: number\n\t\theight: number\n\t}\n}\n\nexport default {\n\tname: 'FaceCoverMixin',\n\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'faces',\n\t\t\t'facesFiles',\n\t\t\t'files',\n\t\t]),\n\t},\n\n\tmethods: {\n\t\tgetFaceCover(faceName): Cover {\n\t\t\treturn JSON.parse(he.decode(this.faces[faceName].props['face-preview-image'] || '{}'))\n\t\t},\n\n\t\t/**\n\t\t * This will produce an inline style to apply to images\n\t\t * to zoom toward the detected face\n\t\t */\n\t\tgetCoverStyle(faceName: string): Record<string, never>|{transform: string, width: string, transformOrigin: string} {\n\t\t\tconst cover = this.getFaceCover(faceName)\n\t\t\tif (!cover || !cover.detection) {\n\t\t\t\treturn {}\n\t\t\t}\n\t\t\tconst detection = cover.detection\n\n\t\t\t// Zoom into the picture so that the face fills the --photos-face-width box nicely\n\t\t\t// if the face is larger than the image, we don't zoom out (reason for the Math.max)\n\t\t\tconst zoom = Math.max(1, (1 / detection.width) * 0.4)\n\n\t\t\tconst horizontalCenterOfFace = (detection.x + detection.width / 2) * 100\n\t\t\tconst verticalCenterOfFace = (detection.y + detection.height / 2) * 100\n\n\t\t\treturn {\n\t\t\t\t// We assume that the image is inside a div with width: var(--photos-face-width)\n\t\t\t\twidth: '100%',\n\t\t\t\t// we translate the image so that the center of the detected face is in the center of the --photos-face-width box\n\t\t\t\t// and add the zoom\n\t\t\t\ttransform: `translate(calc( var(--photos-face-width)/2 - ${horizontalCenterOfFace}% ), calc( var(--photos-face-width)/2 - ${verticalCenterOfFace}% )) scale(${zoom})`,\n\t\t\t\t// this is necessary for the zoom to zoom toward the center of the face\n\t\t\t\ttransformOrigin: `${horizontalCenterOfFace}% ${verticalCenterOfFace}%`,\n\t\t\t}\n\t\t},\n\t},\n}\n","<!--\n - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<div :class=\"['face-cover', small && 'face-cover--small']\" @click=\"$emit('click')\">\n\t\t<div class=\"face-cover__crop-container\">\n\t\t\t<img ref=\"image\"\n\t\t\t\tclass=\"face-cover__image\"\n\t\t\t\t:src=\"coverUrl\"\n\t\t\t\t:style=\"coverDimensions\">\n\t\t</div>\n\t\t<div class=\"face-cover__details\">\n\t\t\t<div v-if=\"!baseName.match(/^[0-9]+$/)\" class=\"face-cover__details__first-line\">\n\t\t\t\t<span class=\"face-cover__details__name\">\n\t\t\t\t\t{{ baseName }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div v-if=\"!small\" class=\"face-cover__details__second-line\">\n\t\t\t\t{{ n('photos', '%n photos', '%n photos', face.props['nbItems']) }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang='ts'>\nimport { mapGetters } from 'vuex'\nimport { generateUrl } from '@nextcloud/router'\nimport FetchFacesMixin from '../../mixins/FetchFacesMixin.js'\nimport FaceCoverMixin from '../../mixins/FaceCoverMixin.js'\nimport type { Collection } from '../../services/collectionFetcher.js'\n\nexport default {\n\tname: 'FaceCover',\n\n\tmixins: [\n\t\tFetchFacesMixin,\n\t\tFaceCoverMixin,\n\t],\n\n\tprops: {\n\t\tbaseName: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tsmall: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tobserver: null,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'files',\n\t\t\t'faces',\n\t\t\t'facesFiles',\n\t\t]),\n\n\t\tface(): Collection {\n\t\t\treturn this.faces[this.baseName]\n\t\t},\n\n\t\tcoverUrl(): string {\n\t\t\tif (!this.cover) {\n\t\t\t\treturn ''\n\t\t\t}\n\n\t\t\treturn generateUrl(`/apps/photos/api/v1/preview/${this.cover.fileid}?x=${512}&y=${512}`)\n\t\t},\n\n\t\tcover() {\n\t\t\treturn this.getFaceCover(this.face.basename)\n\t\t},\n\n\t\tcoverDimensions() {\n\t\t\tif (!this.cover) return {}\n\t\t\treturn this.getCoverStyle(this.face.basename)\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@use '../../mixins/FaceCover';\n</style>\n","<!--\n - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<div :class=\"['face-cover', small && 'face-cover--small']\" @click=\"$emit('click')\">\n\t\t<div class=\"face-cover__crop-container\">\n\t\t\t<AccountOffIcon :size=\"'auto'\" :fill-color=\"colorMainBackground\" />\n\t\t</div>\n\t\t<div class=\"face-cover__details\">\n\t\t\t<div v-if=\"!small\" class=\"face-cover__details__second-line\">\n\t\t\t\t{{ n('photos', '%n unassigned photo', '%n unassigned photos', unassignedFilesCount) }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang='ts'>\nimport { mapGetters } from 'vuex'\nimport FetchFacesMixin from '../../mixins/FetchFacesMixin.js'\nimport FaceCoverMixin from '../../mixins/FaceCoverMixin.js'\nimport AccountOffIcon from 'vue-material-design-icons/AccountOff.vue'\n\nexport default {\n\tname: 'UnassignedFacesCover',\n\n\tcomponents: { AccountOffIcon },\n\n\tmixins: [\n\t\tFetchFacesMixin,\n\t\tFaceCoverMixin,\n\t],\n\n\tprops: {\n\t\tsmall: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'unassignedFilesCount',\n\t\t]),\n\t\tcolorMainBackground() {\n\t\t\treturn getComputedStyle(document.documentElement).getPropertyValue('--color-main-background')\n\t\t},\n\t},\n\n\tasync mounted() {\n\t\tawait this.fetchUnassignedFacesCount()\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@use '../../mixins/FaceCover';\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<!-- Errors handlers-->\n\t<NcEmptyContent v-if=\"errorFetchingFaces\">\n\t\t{{ t('photos', 'An error occurred') }}\n\t</NcEmptyContent>\n\n\t<!-- Face list -->\n\t<div v-else class=\"faces\">\n\t\t<NcLoadingIcon v-if=\"loadingFaces\" />\n\n\t\t<!-- No faces -->\n\t\t<div v-if=\"noFaces && !loadingFaces\" class=\"faces__empty\">\n\t\t\t<NcEmptyContent class=\"empty-content-with-illustration\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<AccountBoxMultipleOutline />\n\t\t\t\t</template>\n\t\t\t\t<template #desc>\n\t\t\t\t\t{{ t('photos', 'This might take some time depending on the size of your photo library.') }}\n\t\t\t\t</template>\n\t\t\t\t{{ t('photos', 'Recognized people will show up here') }}\n\t\t\t</NcEmptyContent>\n\t\t</div>\n\n\t\t<div v-else-if=\"!noFaces\" class=\"faces__list\">\n\t\t\t<router-link v-for=\"face in orderedFaces\"\n\t\t\t\t:key=\"face.basename\"\n\t\t\t\t:to=\"`/faces/${encodeURIComponent(face.basename)}`\">\n\t\t\t\t<FaceCover :base-name=\"face.basename\" />\n\t\t\t</router-link>\n\t\t\t<router-link key=\"unassigned\"\n\t\t\t\t:to=\"`/faces/unassigned`\">\n\t\t\t\t<UnassignedFacesCover />\n\t\t\t</router-link>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang='ts'>\nimport AccountBoxMultipleOutline from 'vue-material-design-icons/AccountBoxMultipleOutline.vue'\n\nimport { NcEmptyContent, NcLoadingIcon } from '@nextcloud/vue'\n\nimport FetchFacesMixin from '../mixins/FetchFacesMixin.js'\nimport FaceCover from '../components/Faces/FaceCover.vue'\nimport { mapGetters } from 'vuex'\nimport UnassignedFacesCover from '../components/Faces/UnassignedFacesCover.vue'\n\nexport default {\n\tname: 'Faces',\n\tcomponents: {\n\t\tUnassignedFacesCover,\n\t\tFaceCover,\n\t\tNcEmptyContent,\n\t\tNcLoadingIcon,\n\t\tAccountBoxMultipleOutline,\n\t},\n\n\tmixins: [\n\t\tFetchFacesMixin,\n\t],\n\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'facesFiles',\n\t\t\t'unassignedFilesCount',\n\t\t]),\n\n\t\t/**\n\t\t * @return {boolean} Whether the list of face is empty or not.\n\t\t */\n\t\tnoFaces() {\n\t\t\treturn Object.keys(this.faces).length === 0\n\t\t},\n\n\t\torderedFaces() {\n\t\t\treturn Object.values(this.faces).sort((a, b) => {\n\t\t\t\tif (a.props.nbItems && b.props.nbItems) {\n\t\t\t\t\treturn b.props.nbItems - a.props.nbItems\n\t\t\t\t}\n\t\t\t\tif (!this.facesFiles[b.basename] || !this.facesFiles[a.basename]) {\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\t\t\t\treturn this.facesFiles[b.basename].length - this.facesFiles[a.basename].length\n\t\t\t})\n\t\t},\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n.faces {\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: calc(100vh - var(--header-height));\n\tpadding-left: 64px;\n\n\t@media only screen and (max-width: 1020px) {\n\t\tpadding: 0;\n\t}\n\n\t&__header {\n\t\tdisplay: flex;\n\t\tmin-height: 60px;\n\t\talign-items: center;\n\n\t\tbutton {\n\t\t\tmargin-right: 32px;\n\t\t}\n\t}\n\n\t&__list {\n\t\tpadding-top: 24px;\n\t\tpadding-bottom: 32px;\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 32px;\n\t\talign-content: flex-start;\n\t}\n\n\t&__empty {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\n\t\t&__button {\n\t\t\tmargin-top: 32px;\n\t\t}\n\t}\n}\n\n.empty-content-with-illustration :deep(.empty-content__icon) {\n\twidth: 200px;\n\theight: 200px;\n\n\tsvg {\n\t\twidth: 200px;\n\t\theight: 200px;\n\t}\n}\n</style>\n","<!--\n - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<div class=\"merge-form face-list\">\n\t\t<FaceCover v-for=\"face in filteredFaces\"\n\t\t\t:key=\"face.basename\"\n\t\t\t:base-name=\"face.basename\"\n\t\t\tsmall\n\t\t\t@click=\"handleSelect(face.basename)\" />\n\t</div>\n</template>\n\n<script lang='ts'>\nimport { mapGetters } from 'vuex'\n\nimport FaceCoverMixin from '../../mixins/FaceCoverMixin.js'\nimport FetchFacesMixin from '../../mixins/FetchFacesMixin.js'\nimport FaceCover from './FaceCover.vue'\n\nexport default {\n\tname: 'FaceMergeForm',\n\tcomponents: { FaceCover },\n\tmixins: [\n\t\tFaceCoverMixin,\n\t\tFetchFacesMixin,\n\t],\n\tprops: {\n\t\tfirstFace: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'files',\n\t\t\t'faces',\n\t\t\t'facesFiles',\n\t\t]),\n\n\t\tfilteredFaces() {\n\t\t\treturn Object.values(this.faces)\n\t\t\t\t.filter(face => face.basename !== this.firstFace)\n\t\t\t\t.sort((a, b) => {\n\t\t\t\t\tif (a.props.nbItems && b.props.nbItems) {\n\t\t\t\t\t\treturn b.props.nbItems - a.props.nbItems\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.facesFiles[b.basename] || !this.facesFiles[a.basename]) {\n\t\t\t\t\t\treturn 0\n\t\t\t\t\t}\n\t\t\t\t\treturn this.facesFiles[b.basename].length - this.facesFiles[a.basename].length\n\t\t\t\t})\n\t\t},\n\t},\n\tmethods: {\n\t\thandleSelect(faceName) {\n\t\t\tthis.$emit('select', faceName)\n\t\t\tthis.loading = true\n\t\t},\n\t},\n}\n</script>\n\n<style scoped lang=\"scss\">\n.face-list {\n\tdisplay: flex;\n\tflex-direction: row;\n\theight: 350px;\n\tflex-wrap: wrap;\n\tpadding: 12px;\n}\n\n.loader {\n\tmargin: 25% auto;\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<!-- Errors handlers-->\n\t<NcEmptyContent v-if=\"face === undefined && !loadingFiles && !loadingFaces\" class=\"empty-content-with-illustration\">\n\t\t<template #icon>\n\t\t\t<AccountBoxMultipleOutline />\n\t\t</template>\n\t\t{{ t('photos', 'This person could not be found') }}\n\t</NcEmptyContent>\n\t<NcEmptyContent v-else-if=\"errorFetchingFiles || errorFetchingFaces\">\n\t\t<template #icon>\n\t\t\t<AlertCircle />\n\t\t</template>\n\t\t{{ t('photos', 'An error occurred') }}\n\t</NcEmptyContent>\n\n\t<div v-else class=\"face\">\n\t\t<div class=\"face__header\">\n\t\t\t<div class=\"face__header__left\">\n\t\t\t\t<NcActions>\n\t\t\t\t\t<NcActionButton @click=\"$router.push('/faces/')\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<ArrowLeft />\n\t\t\t\t\t\t</template>{{ t('photos', 'Back') }}\n\t\t\t\t\t</NcActionButton>\n\t\t\t\t</NcActions>\n\t\t\t\t<div class=\"face__header__title\">\n\t\t\t\t\t<h2 v-if=\"face !== undefined\" :class=\"{'face-name': true, 'hidden-visually': face.basename.match(/^[0-9]+$/)}\">\n\t\t\t\t\t\t{{ face.basename }}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<NcLoadingIcon v-if=\"loadingCount > 0 || loadingFaces\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"face !== undefined\" class=\"face__header__actions\">\n\t\t\t\t<NcActions>\n\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t:aria-label=\"t('photos', 'Rename person')\"\n\t\t\t\t\t\t@click=\"showRenameModal = true\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<Pencil />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t{{ t('photos', 'Rename person') }}\n\t\t\t\t\t</NcActionButton>\n\t\t\t\t</NcActions>\n\t\t\t\t<NcActions :force-menu=\"true\">\n\t\t\t\t\t<NcActionButton v-if=\"Object.keys(faces).length > 1\"\n\t\t\t\t\t\t:close-after-click=\"true\"\n\t\t\t\t\t\t:aria-label=\"t('photos', 'Merge with different person')\"\n\t\t\t\t\t\t@click=\"showMergeModal = true\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<Merge />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t{{ t('photos', 'Merge with different person') }}\n\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t<template v-if=\"selectedFileIds.length\">\n\t\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t\t:aria-label=\"t('photos', 'Download selected files')\"\n\t\t\t\t\t\t\t@click=\"downloadSelection\">\n\t\t\t\t\t\t\t<Download slot=\"icon\" />\n\t\t\t\t\t\t\t{{ t('photos', 'Download selected photos') }}\n\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t\t<NcActionButton v-if=\"shouldFavoriteSelection\"\n\t\t\t\t\t\t\t:close-after-click=\"true\"\n\t\t\t\t\t\t\t:aria-label=\"t('photos', 'Mark selection as favorite')\"\n\t\t\t\t\t\t\t@click=\"favoriteSelection\">\n\t\t\t\t\t\t\t<Star slot=\"icon\" />\n\t\t\t\t\t\t\t{{ t('photos', 'Favorite') }}\n\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t\t<NcActionButton v-else\n\t\t\t\t\t\t\t:close-after-click=\"true\"\n\t\t\t\t\t\t\t:aria-label=\"t('photos', 'Remove selection from favorites')\"\n\t\t\t\t\t\t\t@click=\"unFavoriteSelection\">\n\t\t\t\t\t\t\t<Star slot=\"icon\" />\n\t\t\t\t\t\t\t{{ t('photos', 'Remove from favorites') }}\n\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t\t@click=\"showMoveModal = true\">\n\t\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t\t<AccountSwitch />\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t{{ n('photos', 'Move photo to a different person', 'Move photos to a different person', selectedFileIds.length) }}\n\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t\t@click=\"handleRemoveFilesFromFace(selectedFileIds)\">\n\t\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t{{ n('photos', 'Remove photo from person', 'Remove photos from person', selectedFileIds.length) }}\n\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t</template>\n\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t@click=\"handleDeleteFace\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t{{ t('photos', 'Remove person') }}\n\t\t\t\t\t</NcActionButton>\n\t\t\t\t</NcActions>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<FilesListViewer v-if=\"face !== undefined\"\n\t\t\tclass=\"face__photos\"\n\t\t\t:container-element=\"appContent\"\n\t\t\t:file-ids=\"faceFileIds\"\n\t\t\t:loading=\"loadingFiles || loadingFaces\">\n\t\t\t<File slot-scope=\"{file, distance}\"\n\t\t\t\t:file=\"files[file.id]\"\n\t\t\t\t:allow-selection=\"true\"\n\t\t\t\t:selected=\"selection[file.id] === true\"\n\t\t\t\t:distance=\"distance\"\n\t\t\t\t@click=\"openViewer\"\n\t\t\t\t@select-toggled=\"onFileSelectToggle\" />\n\t\t</FilesListViewer>\n\n\t\t<NcDialog v-if=\"showRenameModal\"\n\t\t\t:name=\"t('photos', 'Rename person')\"\n\t\t\tclose-on-click-outside\n\t\t\tsize=\"small\"\n\t\t\t@closing=\"showRenameModal = false\">\n\t\t\t<div class=\"rename-form\">\n\t\t\t\t<input ref=\"nameInput\"\n\t\t\t\t\tv-focus\n\t\t\t\t\t:value=\"faceName\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\trequired\n\t\t\t\t\t:placeholder=\"t('photos', 'Name of this person')\"\n\t\t\t\t\t@keydown.enter=\"handleRenameFace($refs.nameInput.value)\">\n\t\t\t</div>\n\t\t\t<template #actions>\n\t\t\t\t<NcButton :aria-label=\"t('photos', 'Save.')\"\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t:disabled=\"$refs.nameInput && $refs.nameInput.value.trim() === ''\"\n\t\t\t\t\t@click=\"handleRenameFace($refs.nameInput.value)\">\n\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t<NcLoadingIcon v-if=\"loadingCount\" />\n\t\t\t\t\t\t<Send v-else />\n\t\t\t\t\t</template>\n\t\t\t\t\t{{ t('photos', 'Save') }}\n\t\t\t\t</NcButton>\n\t\t\t</template>\n\t\t</NcDialog>\n\n\t\t<NcDialog v-if=\"showMergeModal\"\n\t\t\t:name=\"t('photos', 'Merge person')\"\n\t\t\tclose-on-click-outside\n\t\t\tsize=\"normal\"\n\t\t\t@closing=\"showMergeModal = false\">\n\t\t\t<FaceMergeForm :first-face=\"faceName\" @select=\"handleMerge($event)\" />\n\t\t</NcDialog>\n\n\t\t<NcDialog v-if=\"showMoveModal\"\n\t\t\t:name=\"t('photos', 'Move to different person')\"\n\t\t\tclose-on-click-outside\n\t\t\tsize=\"normal\"\n\t\t\t@closing=\"showMoveModal = false\">\n\t\t\t<FaceMergeForm :first-face=\"faceName\" @select=\"handleMove($event, selectedFileIds)\" />\n\t\t</NcDialog>\n\t</div>\n</template>\n\n<script lang='ts'>\nimport { mapActions, mapGetters } from 'vuex'\nimport Pencil from 'vue-material-design-icons/Pencil.vue'\nimport Close from 'vue-material-design-icons/Close.vue'\nimport AlertCircle from 'vue-material-design-icons/AlertCircle.vue'\nimport Star from 'vue-material-design-icons/Star.vue'\nimport Download from 'vue-material-design-icons/Download.vue'\nimport Send from 'vue-material-design-icons/Send.vue'\nimport Merge from 'vue-material-design-icons/Merge.vue'\nimport ArrowLeft from 'vue-material-design-icons/ArrowLeft.vue'\nimport AccountSwitch from 'vue-material-design-icons/AccountSwitch.vue'\nimport AccountBoxMultipleOutline from 'vue-material-design-icons/AccountBoxMultipleOutline.vue'\n\nimport { NcActions, NcActionButton, NcDialog, NcEmptyContent, NcButton, NcLoadingIcon } from '@nextcloud/vue'\n\nimport FetchFilesMixin from '../mixins/FetchFilesMixin.js'\nimport FilesSelectionMixin from '../mixins/FilesSelectionMixin.js'\nimport FilesListViewer from '../components/FilesListViewer.vue'\nimport File from '../components/File.vue'\nimport logger from '../services/logger.js'\nimport FetchFacesMixin from '../mixins/FetchFacesMixin.js'\nimport Vue from 'vue'\nimport FaceMergeForm from '../components/Faces/FaceMergeForm.vue'\nimport type { Collection } from '../services/collectionFetcher.js'\n\nexport default {\n\tname: 'FaceContent',\n\tcomponents: {\n\t\tPencil,\n\t\tStar,\n\t\tDownload,\n\t\tClose,\n\t\tAlertCircle,\n\t\tSend,\n\t\tMerge,\n\t\tArrowLeft,\n\t\tAccountBoxMultipleOutline,\n\t\tFaceMergeForm,\n\t\tFilesListViewer,\n\t\tFile,\n\t\tNcLoadingIcon,\n\t\tNcEmptyContent,\n\t\tNcActions,\n\t\tNcActionButton,\n\t\tNcDialog,\n\t\tNcButton,\n\t\tAccountSwitch,\n\t},\n\n\tdirectives: {\n\t\tfocus(el) {\n\t\t\tVue.nextTick(() => el.focus())\n\t\t},\n\t},\n\n\tmixins: [\n\t\tFetchFacesMixin,\n\t\tFetchFilesMixin,\n\t\tFilesSelectionMixin,\n\t],\n\n\tprops: {\n\t\tfaceName: {\n\t\t\ttype: String,\n\t\t\tdefault: '/',\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tshowMoveModal: false,\n\t\t\tshowMergeModal: false,\n\t\t\tshowRenameModal: false,\n\t\t\tloadingCount: 0,\n\t\t\tappContent: document.getElementById('app-content-vue'),\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'files',\n\t\t\t'facesFiles',\n\t\t]),\n\n\t\tface(): Collection {\n\t\t\treturn this.faces[this.faceName]\n\t\t},\n\n\t\tfaceFileIds(): string[] {\n\t\t\treturn this.facesFiles[this.faceName] || []\n\t\t},\n\n\t\tshouldFavoriteSelection(): boolean {\n\t\t\t// Favorite all selection if at least one file is not on the favorites.\n\t\t\treturn this.selectedFileIds.some((fileId) => this.$store.state.files.files[fileId].favorite === 0)\n\t\t},\n\t},\n\n\twatch: {\n\t\tface() {\n\t\t\tif (this.face) {\n\t\t\t\tthis.fetchFaceContent(this.faceName)\n\t\t\t}\n\t\t},\n\t},\n\n\tmounted() {\n\t\tthis.fetchFaceContent(this.faceName)\n\t},\n\n\tmethods: {\n\t\t...mapActions([\n\t\t\t'appendFiles',\n\t\t\t'deleteFace',\n\t\t\t'renameFace',\n\t\t\t'downloadFiles',\n\t\t\t'toggleFavoriteForFiles',\n\t\t\t'removeFilesFromFace',\n\t\t\t'moveFilesToFace',\n\t\t]),\n\n\t\topenViewer(fileId: string) {\n\t\t\tconst file = this.files[fileId]\n\t\t\tOCA.Viewer.open({\n\t\t\t\tpath: '/' + file.filename.split('/').slice(3).join('/'),\n\t\t\t\tlist: this.faceFileIds.map(fileId => ({ ...this.files[fileId], filename: '/' + this.files[fileId].filename.split('/').slice(3).join('/') })),\n\t\t\t\tloadMore: file.loadMore ? async () => await file.loadMore(true) : () => [],\n\t\t\t\tcanLoop: file.canLoop,\n\t\t\t})\n\t\t},\n\n\t\tasync handleRemoveFilesFromFace(fileIds: string[]) {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.removeFilesFromFace({ faceName: this.faceName, fileIdsToRemove: fileIds })\n\t\t\t\tthis.resetSelection()\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync handleDeleteFace() {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.deleteFace({ faceName: this.faceName })\n\t\t\t\tthis.$router.push('/faces')\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync handleRenameFace(faceName: string) {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tthis.showRenameModal = false\n\t\t\t\tconst oldName = this.faceName\n\t\t\t\tawait this.renameFace({ oldName, faceName })\n\t\t\t\tthis.$router.push({ name: 'facecontent', params: { faceName } })\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync handleMerge(faceName: string) {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.moveFilesToFace({ oldFace: this.faceName, faceName, fileIdsToMove: this.facesFiles[this.faceName] })\n\t\t\t\tawait this.deleteFace({ faceName: this.faceName })\n\t\t\t\tthis.showMergeModal = false\n\t\t\t\tthis.$router.push({ name: 'facecontent', params: { faceName } })\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync handleMove(faceName: string, fileIds: string[]) {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.moveFilesToFace({ oldFace: this.faceName, faceName, fileIdsToMove: fileIds })\n\t\t\t\tthis.showMoveModal = false\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync favoriteSelection() {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.toggleFavoriteForFiles({ fileIds: this.selectedFileIds, favoriteState: true })\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync unFavoriteSelection() {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.toggleFavoriteForFiles({ fileIds: this.selectedFileIds, favoriteState: false })\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync downloadSelection() {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.downloadFiles(this.selectedFileIds)\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n@use '../mixins/FaceContent';\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<!-- Errors handlers-->\n\t<NcEmptyContent v-if=\"errorFetchingFiles\">\n\t\t<template #icon>\n\t\t\t<AlertCircle />\n\t\t</template>\n\t\t{{ t('photos', 'An error occurred') }}\n\t</NcEmptyContent>\n\n\t<div v-else class=\"face\">\n\t\t<div class=\"face__header\">\n\t\t\t<div class=\"face__header__left\">\n\t\t\t\t<NcActions>\n\t\t\t\t\t<NcActionButton @click=\"$router.push('/faces/')\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<ArrowLeft />\n\t\t\t\t\t\t</template>{{ t('photos', 'Back') }}\n\t\t\t\t\t</NcActionButton>\n\t\t\t\t</NcActions>\n\t\t\t\t<div class=\"face__header__title\">\n\t\t\t\t\t<h2 :class=\"{'face-name': true}\">\n\t\t\t\t\t\t{{ t('photos', 'Unassigned faces') }}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<NcLoadingIcon v-if=\"loadingCount > 0 || loadingFaces\" />\n\t\t\t</div>\n\t\t\t<div class=\"face__header__actions\">\n\t\t\t\t<NcActions :force-menu=\"true\">\n\t\t\t\t\t<template v-if=\"selectedFileIds.length\">\n\t\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t\t:aria-label=\"t('photos', 'Download selected files')\"\n\t\t\t\t\t\t\t@click=\"downloadSelection\">\n\t\t\t\t\t\t\t<Download slot=\"icon\" />\n\t\t\t\t\t\t\t{{ t('photos', 'Download selected photos') }}\n\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t\t<NcActionButton v-if=\"shouldFavoriteSelection\"\n\t\t\t\t\t\t\t:close-after-click=\"true\"\n\t\t\t\t\t\t\t:aria-label=\"t('photos', 'Mark selection as favorite')\"\n\t\t\t\t\t\t\t@click=\"favoriteSelection\">\n\t\t\t\t\t\t\t<Star slot=\"icon\" />\n\t\t\t\t\t\t\t{{ t('photos', 'Favorite') }}\n\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t\t<NcActionButton v-else\n\t\t\t\t\t\t\t:close-after-click=\"true\"\n\t\t\t\t\t\t\t:aria-label=\"t('photos', 'Remove selection from favorites')\"\n\t\t\t\t\t\t\t@click=\"unFavoriteSelection\">\n\t\t\t\t\t\t\t<Star slot=\"icon\" />\n\t\t\t\t\t\t\t{{ t('photos', 'Remove from favorites') }}\n\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t\t<NcActionButton :close-after-click=\"true\"\n\t\t\t\t\t\t\t@click=\"showMoveModal = true\">\n\t\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t\t<AccountSwitch />\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t{{ n('photos', 'Move photo to a different person', 'Move photos to a different person', selectedFileIds.length) }}\n\t\t\t\t\t\t</NcActionButton>\n\t\t\t\t\t</template>\n\t\t\t\t</NcActions>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<FilesListViewer class=\"face__photos\"\n\t\t\t:container-element=\"appContent\"\n\t\t\t:file-ids=\"faceFileIds\"\n\t\t\t:loading=\"loadingFiles || loadingFaces\">\n\t\t\t<File slot-scope=\"{file, distance}\"\n\t\t\t\t:file=\"files[file.id]\"\n\t\t\t\t:allow-selection=\"true\"\n\t\t\t\t:selected=\"selection[file.id] === true\"\n\t\t\t\t:distance=\"distance\"\n\t\t\t\t@click=\"openViewer\"\n\t\t\t\t@select-toggled=\"onFileSelectToggle\" />\n\t\t</FilesListViewer>\n\n\t\t<NcDialog v-if=\"showMoveModal\"\n\t\t\t:name=\"t('photos', 'Move to different person')\"\n\t\t\tclose-on-click-outside\n\t\t\tsize=\"normal\"\n\t\t\t@closing=\"showMoveModal = false\">\n\t\t\t<FaceMergeForm :first-face=\"'-1'\" @select=\"handleMove($event, selectedFileIds)\" />\n\t\t</NcDialog>\n\t</div>\n</template>\n\n<script lang='ts'>\nimport { mapActions, mapGetters } from 'vuex'\nimport AlertCircle from 'vue-material-design-icons/AlertCircle.vue'\nimport Star from 'vue-material-design-icons/Star.vue'\nimport Download from 'vue-material-design-icons/Download.vue'\nimport ArrowLeft from 'vue-material-design-icons/ArrowLeft.vue'\nimport AccountSwitch from 'vue-material-design-icons/AccountSwitch.vue'\n\nimport { NcActions, NcActionButton, NcDialog, NcEmptyContent, NcLoadingIcon } from '@nextcloud/vue'\n\nimport FetchFilesMixin from '../mixins/FetchFilesMixin.js'\nimport FilesSelectionMixin from '../mixins/FilesSelectionMixin.js'\nimport FilesListViewer from '../components/FilesListViewer.vue'\nimport File from '../components/File.vue'\nimport logger from '../services/logger.js'\nimport FetchFacesMixin from '../mixins/FetchFacesMixin.js'\nimport Vue from 'vue'\nimport FaceMergeForm from '../components/Faces/FaceMergeForm.vue'\n\nexport default {\n\tname: 'UnassignedFaces',\n\tcomponents: {\n\t\tStar,\n\t\tDownload,\n\t\tAlertCircle,\n\t\tArrowLeft,\n\t\tFaceMergeForm,\n\t\tFilesListViewer,\n\t\tFile,\n\t\tNcLoadingIcon,\n\t\tNcEmptyContent,\n\t\tNcActions,\n\t\tNcActionButton,\n\t\tNcDialog,\n\t\tAccountSwitch,\n\t},\n\n\tdirectives: {\n\t\tfocus(el) {\n\t\t\tVue.nextTick(() => el.focus())\n\t\t},\n\t},\n\n\tmixins: [\n\t\tFetchFacesMixin,\n\t\tFetchFilesMixin,\n\t\tFilesSelectionMixin,\n\t],\n\n\tdata() {\n\t\treturn {\n\t\t\tshowMoveModal: false,\n\t\t\tloadingCount: 0,\n\t\t\tappContent: document.getElementById('app-content-vue'),\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t'files',\n\t\t\t'unassignedFiles',\n\t\t]),\n\n\t\tfaceFileIds(): string[] {\n\t\t\treturn this.unassignedFiles || []\n\t\t},\n\n\t\tshouldFavoriteSelection(): boolean {\n\t\t\t// Favorite all selection if at least one file is not on the favorites.\n\t\t\treturn this.selectedFileIds.some((fileId) => this.$store.state.files.files[fileId].favorite === 0)\n\t\t},\n\t},\n\n\tmounted() {\n\t\tthis.fetchUnassignedFaces()\n\t},\n\n\tmethods: {\n\t\t...mapActions([\n\t\t\t'appendFiles',\n\t\t\t'deleteFace',\n\t\t\t'renameFace',\n\t\t\t'downloadFiles',\n\t\t\t'toggleFavoriteForFiles',\n\t\t\t'removeFilesFromFace',\n\t\t\t'moveFilesToFace',\n\t\t]),\n\n\t\topenViewer(fileId) {\n\t\t\tconst file = this.files[fileId]\n\t\t\tOCA.Viewer.open({\n\t\t\t\tpath: '/' + file.filename.split('/').slice(3).join('/'),\n\t\t\t\tlist: this.faceFileIds.map(fileId => ({ ...this.files[fileId], filename: '/' + this.files[fileId].filename.split('/').slice(3).join('/') })),\n\t\t\t\tloadMore: file.loadMore ? async () => await file.loadMore(true) : () => [],\n\t\t\t\tcanLoop: file.canLoop,\n\t\t\t})\n\t\t},\n\n\t\tasync handleMove(faceName, fileIds) {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.moveFilesToFace({ oldFace: null, faceName, fileIdsToMove: fileIds })\n\t\t\t\tthis.showMoveModal = false\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync favoriteSelection() {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.toggleFavoriteForFiles({ fileIds: this.selectedFileIds, favoriteState: true })\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync unFavoriteSelection() {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.toggleFavoriteForFiles({ fileIds: this.selectedFileIds, favoriteState: false })\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\n\t\tasync downloadSelection() {\n\t\t\ttry {\n\t\t\t\tthis.loadingCount++\n\t\t\t\tawait this.downloadFiles(this.selectedFileIds)\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loadingCount--\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n<style lang=\"scss\" scoped>\n@use '../mixins/FaceContent';\n</style>\n"],"names":["state","mutations","faces","face","Vue","faceNames","faceName","fileIdsToAdd","faceFiles","fileId","files","fileIdsToRemove","count","getters","actions","context","oldFace","fileIdsToMove","semaphore","Semaphore","promises","file","fileBaseName","symbol","davClient","getCurrentUser","detection","error","logger","t","showError","oldName","recognizeDAVProps","FetchFacesMixin","AbortControllerMixin","mapGetters","mapActions","getPropFind","force","fetchedRawFiles","fetchedFiles","genFileInfo","he","fileIds","unassignedFacesRoot","FaceCoverMixin","cover","zoom","horizontalCenterOfFace","verticalCenterOfFace","_sfc_main$5","generateUrl","_sfc_main$4","AccountOffIcon","_sfc_main$3","UnassignedFacesCover","FaceCover","NcEmptyContent","NcLoadingIcon","AccountBoxMultipleOutline","a","b","_sfc_main$2","_sfc_main$1","Pencil","Star","Download","Close","AlertCircle","Send","Merge","ArrowLeft","FaceMergeForm","FilesListViewer","File","NcActions","NcActionButton","NcDialog","NcButton","AccountSwitch","el","FetchFilesMixin","FilesSelectionMixin","_sfc_main"],"mappings":"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"}