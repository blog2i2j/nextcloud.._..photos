{"version":3,"file":"FetchFilesMixin-BFmwx91D.chunk.mjs","sources":["../src/mixins/FetchFilesMixin.ts"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { defineComponent } from 'vue'\nimport { isAxiosError } from 'axios'\n\nimport { showError } from '@nextcloud/dialogs'\nimport { defaultRootPath } from '@nextcloud/files/dav'\nimport { joinPaths } from '@nextcloud/paths'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport { davClient } from '../services/DavClient.ts'\nimport logger from '../services/logger.js'\nimport getPhotos, { type PhotoSearchOptions } from '../services/PhotoSearch.js'\nimport SemaphoreWithPriority from '../utils/semaphoreWithPriority.js'\nimport AbortControllerMixin from './AbortControllerMixin.js'\nimport store from '../store/index.js'\n\nexport default defineComponent({\n\tname: 'FetchFilesMixin',\n\n\tmixins: [\n\t\tAbortControllerMixin,\n\t],\n\n\tdata() {\n\t\treturn {\n\t\t\terrorFetchingFiles: null as null|number|Error|unknown,\n\t\t\tloadingFiles: false,\n\t\t\tdoneFetchingFiles: false,\n\t\t\tfetchSemaphore: new SemaphoreWithPriority(1),\n\t\t\tfetchedFileIds: [] as number[],\n\t\t}\n\t},\n\n\twatch: {\n\t\t'$route.path'() {\n\t\t\tthis.resetFetchFilesState()\n\t\t},\n\t},\n\n\tmethods: {\n\t\t/**\n\t\t * @param options - Options to pass to getPhotos.\n\t\t * @param blacklist - Array of ids to filter out.\n\t\t * @param force - Force fetching even if doneFetchingFiles is true\n\t\t * @return The next batch of data depending on global offset.\n\t\t */\n\t\tasync fetchFiles(options: Partial<PhotoSearchOptions> = {}, blacklist: number[] = [], force: boolean = false): Promise<number[]> {\n\t\t\tif ((this.doneFetchingFiles && !force) || this.loadingFiles) {\n\t\t\t\treturn []\n\t\t\t}\n\n\t\t\tconst fetchSemaphoreSymbol = await this.fetchSemaphore.acquire()\n\n\t\t\ttry {\n\t\t\t\tthis.errorFetchingFiles = null\n\t\t\t\tthis.loadingFiles = true\n\n\t\t\t\tconst numberOfImagesPerBatch = 200\n\n\t\t\t\t// Load next batch of images\n\t\t\t\tconst fetchedFiles = await getPhotos({\n\t\t\t\t\tfirstResult: this.fetchedFileIds.length,\n\t\t\t\t\tnbResults: numberOfImagesPerBatch,\n\t\t\t\t\t...options,\n\t\t\t\t\tsignal: this.abortController.signal,\n\t\t\t\t})\n\n\t\t\t\t// If we get less files than requested that means we got to the end\n\t\t\t\tif (fetchedFiles.length !== numberOfImagesPerBatch) {\n\t\t\t\t\tthis.doneFetchingFiles = true\n\t\t\t\t}\n\n\t\t\t\tconst fileIds = fetchedFiles\n\t\t\t\t\t.map(file => file.fileid as number)\n\t\t\t\t\t.filter(fileId => !this.fetchedFileIds.includes(fileId)) // Filter to prevent duplicate fileIds.\n\n\t\t\t\tthis.fetchedFileIds.push(\n\t\t\t\t\t...fileIds.filter((fileId) => !blacklist.includes(fileId)),\n\t\t\t\t)\n\n\t\t\t\tthis.$store.dispatch('appendFiles', fetchedFiles)\n\n\t\t\t\tlogger.debug(`[FetchFilesMixin] Fetched ${fileIds.length} new files: `, { fileIds })\n\n\t\t\t\treturn fileIds\n\t\t\t} catch (error) {\n\t\t\t\tif (isAxiosError(error) && error.response?.status === 404) {\n\t\t\t\t\tconst sources = store.state.userConfig.photosSourceFolders\n\t\t\t\t\tfor (const source of sources) {\n\t\t\t\t\t\tif (error.response?.data?.match(`File with name /${source} could not be located`) === null) {\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlogger.debug(`The ${source} folder does not exist, creating it.`)\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait davClient.createDirectory(joinPaths(defaultRootPath, source))\n\t\t\t\t\t\t\tthis.resetFetchFilesState()\n\t\t\t\t\t\t\treturn []\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.errorFetchingFiles = 404\n\t\t\t\t\t\t\tlogger.error('Fail to create source directory', { error })\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (error instanceof DOMException && error.code === error.ABORT_ERR) {\n\t\t\t\t\treturn []\n\t\t\t\t} else {\n\t\t\t\t\tthis.errorFetchingFiles = error\n\t\t\t\t}\n\n\t\t\t\t// cancelled request, moving on...\n\t\t\t\tshowError(t('photos', 'Error fetching files'))\n\t\t\t\tlogger.error(t('photos', 'Error fetching files'), { error })\n\t\t\t} finally {\n\t\t\t\tthis.loadingFiles = false\n\t\t\t\tthis.fetchSemaphore.release(fetchSemaphoreSymbol)\n\t\t\t}\n\n\t\t\treturn []\n\t\t},\n\n\t\tresetFetchFilesState() {\n\t\t\tthis.doneFetchingFiles = false\n\t\t\tthis.errorFetchingFiles = null\n\t\t\tthis.loadingFiles = false\n\t\t\tthis.fetchedFileIds = []\n\t\t},\n\t},\n})\n"],"names":["FetchFilesMixin","defineComponent","AbortControllerMixin","SemaphoreWithPriority","options","blacklist","force","fetchSemaphoreSymbol","numberOfImagesPerBatch","fetchedFiles","getPhotos","fileIds","file","fileId","logger","error","isAxiosError","sources","store","source","davClient","joinPaths","defaultRootPath","showError","t"],"mappings":"mRAoBA,MAAAA,EAAeC,EAAgB,CAC9B,KAAM,kBAEN,OAAQ,CACPC,CACD,EAEA,MAAO,CACC,MAAA,CACN,mBAAoB,KACpB,aAAc,GACd,kBAAmB,GACnB,eAAgB,IAAIC,EAAsB,CAAC,EAC3C,eAAgB,CAAA,CACjB,CACD,EAEA,MAAO,CACN,eAAgB,CACf,KAAK,qBAAqB,CAAA,CAE5B,EAEA,QAAS,CAOR,MAAM,WAAWC,EAAuC,GAAIC,EAAsB,CAAI,EAAAC,EAAiB,GAA0B,CAChI,GAAK,KAAK,mBAAqB,CAACA,GAAU,KAAK,aAC9C,MAAO,CAAC,EAGT,MAAMC,EAAuB,MAAM,KAAK,eAAe,QAAQ,EAE3D,GAAA,CACH,KAAK,mBAAqB,KAC1B,KAAK,aAAe,GAEpB,MAAMC,EAAyB,IAGzBC,EAAe,MAAMC,EAAU,CACpC,YAAa,KAAK,eAAe,OACjC,UAAWF,EACX,GAAGJ,EACH,OAAQ,KAAK,gBAAgB,MAAA,CAC7B,EAGGK,EAAa,SAAWD,IAC3B,KAAK,kBAAoB,IAG1B,MAAMG,EAAUF,EACd,IAAIG,GAAQA,EAAK,MAAgB,EACjC,OAAOC,GAAU,CAAC,KAAK,eAAe,SAASA,CAAM,CAAC,EAExD,OAAA,KAAK,eAAe,KACnB,GAAGF,EAAQ,OAAQE,GAAW,CAACR,EAAU,SAASQ,CAAM,CAAC,CAC1D,EAEK,KAAA,OAAO,SAAS,cAAeJ,CAAY,EAEhDK,EAAO,MAAM,6BAA6BH,EAAQ,MAAM,eAAgB,CAAE,QAAAA,EAAS,EAE5EA,QACCI,EAAO,CACf,GAAIC,EAAaD,CAAK,GAAKA,EAAM,UAAU,SAAW,IAAK,CACpD,MAAAE,EAAUC,EAAM,MAAM,WAAW,oBACvC,UAAWC,KAAUF,EAChB,GAAAF,EAAM,UAAU,MAAM,MAAM,mBAAmBI,CAAM,uBAAuB,IAAM,KAG/E,CAAAL,EAAA,MAAM,OAAOK,CAAM,sCAAsC,EAC5D,GAAA,CACH,aAAMC,EAAU,gBAAgBC,EAAUC,EAAiBH,CAAM,CAAC,EAClE,KAAK,qBAAqB,EACnB,CAAC,QACAJ,EAAO,CACf,KAAK,mBAAqB,IAC1BD,EAAO,MAAM,kCAAmC,CAAE,MAAAC,EAAO,CAAA,CAE3D,CAAA,MACUA,GAAAA,aAAiB,cAAgBA,EAAM,OAASA,EAAM,UAChE,MAAO,CAAC,EAER,KAAK,mBAAqBA,EAIjBQ,EAAAC,EAAE,SAAU,sBAAsB,CAAC,EAC7CV,EAAO,MAAMU,EAAE,SAAU,sBAAsB,EAAG,CAAE,MAAAT,EAAO,CAAA,QAAA,CAE3D,KAAK,aAAe,GACf,KAAA,eAAe,QAAQR,CAAoB,CAAA,CAGjD,MAAO,CAAC,CACT,EAEA,sBAAuB,CACtB,KAAK,kBAAoB,GACzB,KAAK,mBAAqB,KAC1B,KAAK,aAAe,GACpB,KAAK,eAAiB,CAAC,CAAA,CACxB,CAEF,CAAC"}